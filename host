local exe_name, exe_version = identifyexecutor()
local function home999() end
local function home888() end

if exe_name ~= "Wave Windows" then
    hookfunction(home888, home999)
    if isfunctionhooked(home888) == false then
        game.Players.LocalPlayer:Destroy()
        return LPH_CRASH()
    end
end 

local function check_env(env)
    for _, func in env do
        if type(func) ~= "function" then
            continue
        end

        local functionhook = isfunctionhooked(func)

        if functionhook then
            game.Players.LocalPlayer:Destroy()
            return LPH_CRASH()
        end
    end
end

check_env( getgenv() )
check_env( getrenv() )
--

local Lua_Fetch_Connections = getconnections
local Lua_Fetch_Upvalues = getupvalues
local Lua_Hook = hookfunction 
local Lua_Hook_Method = hookmetamethod
local Lua_Unhook = restorefunction
local Lua_Replace_Function = replaceclosure
local Lua_Set_Upvalue = setupvalue
local Lua_Clone_Function = clonefunction

local Game_RunService = game:GetService("RunService")
local Game_LogService = game:GetService("LogService")
local Game_LogService_MessageOut = Game_LogService.MessageOut

local String_Lower = string.lower
local Table_Find = table.find
local Get_Type = type

local Current_Connections = {};
local Hooked_Connections = {};

local function Test_Table(Table, Return_Type)
for TABLE_INDEX, TABLE_VALUE in Table do
    if type(TABLE_VALUE) == String_Lower(Return_Type) then
        return TABLE_VALUE, TABLE_INDEX
    end

    continue
end
end

local function Print_Table(Table)
table.foreach(Table, print)
end

if getgenv().DEBUG then
print("[auth.injected.live] Waiting...")
end

local good_check = 0

function auth_heart()
return true , true
end

function Lua_Common_Intercept(old, ...)
print(...)
return old(...)
end

function XVNP_L(CONNECTION)
local s, e = pcall(function()
    local OPENAC_TABLE = Lua_Fetch_Upvalues(CONNECTION.Function)[9]
    local OPENAC_FUNCTION = OPENAC_TABLE[1]
    local IGNORED_INDEX = {3, 12, 1, 11, 15, 8, 20, 18, 22}

    Lua_Set_Upvalue(OPENAC_FUNCTION, 14, function(...)
        return function(...)
            local args = {...}

            if type(args[1]) == "table" and args[1][1] then
                pcall(function()
                    if type(args[1][1]) == "userdata" then
                        args[1][1]:Disconnect()
                        args[1][2]:Disconnect()
                        args[1][3]:Disconnect()
                        args[1][4]:Disconnect()
                    end
                end)
            end 
        end
    end)

    Lua_Set_Upvalue(OPENAC_FUNCTION, 1, function(...)
        task.wait(200)
    end)

    hookfunction(OPENAC_FUNCTION, function(...)
        return {}
    end)
end)
end

local XVNP_LASTUPDATE = 0
local XVNP_UPDATEINTERVAL = 5

local XVNP_CONNECTIONSNIFFER;

XVNP_CONNECTIONSNIFFER = Game_RunService.RenderStepped:Connect(function()
if #Lua_Fetch_Connections(Game_LogService_MessageOut) >= 2 then
    XVNP_CONNECTIONSNIFFER:Disconnect()
end

if tick() - XVNP_LASTUPDATE >= XVNP_UPDATEINTERVAL then
    XVNP_LASTUPDATE = tick() 

    local OpenAc_Connections = Lua_Fetch_Connections(Game_LogService_MessageOut)

    for _, CONNECTION in OpenAc_Connections do
        if not table.find(Current_Connections, CONNECTION) then
            table.insert(Current_Connections, CONNECTION)
            table.insert(Hooked_Connections, CONNECTION)

            XVNP_L(CONNECTION)
            
        end
    end
end
end)

local last_beat = 0
Game_RunService.RenderStepped:Connect(function()
if last_beat + 1 < tick() then
    last_beat = tick() + 1 

    local what, are = auth_heart()

    if not are or not what then
        if good_check <= 0 then
            game.Players.LocalPlayer:Destroy()
            return LPH_CRASH()
        else
            good_check -=1
        end
    else
        good_check += 1
    end

end
end)

if getgenv().DEBUG then
print("[auth.injected.live] Started Emulation Thread")
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local GroupService = game:GetService("GroupService")
local Lighting = game:GetService("Lighting")
local ChatService = game:GetService("Chat")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

--Module scripts
local mainModule = require(ReplicatedStorage:WaitForChild("MainModule"))

--Wait for player to be added
local PLAYER = Players.LocalPlayer

local MAIN_EVENT = ReplicatedStorage:WaitForChild("MainEvent")
local PLAYER_GUI = PLAYER:WaitForChild("PlayerGui")

local PLAYER_CREW = PLAYER:WaitForChild("DataFolder"):WaitForChild("Information"):WaitForChild("Crew")

--IGNORED
local IGNORED = workspace:WaitForChild("Ignored")

local function isAlt(userId)
    if not getgenv().alts then
        return false
    end
    for i, id in ipairs(getgenv().alts) do
        if userId == id then
            return true
        end
    end
    return false
end

local PLAYER_CASH = PLAYER:WaitForChild("DataFolder"):WaitForChild("Currency")

-- Function to format numbers with commas
local function commaValue(amount)
    local formatted = tostring(amount)
    local k
    while true do  
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k==0) then
            break
        end
    end
    return formatted
end

-- Only load HOST GUI if NOT an alt
if isAlt(PLAYER.UserId) == false then
    local function format(value)
        -- Check if the value is negative
        local isNegative = value < 0
        value = math.abs(value)  -- Take the absolute value for formatting
    
        -- Format the number with commas
        local formatted = tostring(value):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
    
        -- Add the dollar sign at the beginning
        if isNegative then
            formatted = "$-" .. formatted
        else
            formatted = "$" .. formatted
        end
        
        return formatted
    end
    
    
    hookfunction(game:GetService("UserInputService").GetFocusedTextBox, newcclosure(function(...)
        return 
    end))
    
    
    
    local G2L = {};
    
    
        -- Get the UserInputService to listen for key events
    local UserInputService = game:GetService("UserInputService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    
    -- Function to hide all GUIs
    local function hideGUIs()
        if G2L["1"] then
            G2L["1"].Enabled = false  -- Disables the GUI by setting the "Enabled" property to false
        end
    end
    
    -- Function to show all GUIs
    -- Function to create a dropdown list
    local function createDropdown(TEXTBOX, parent, position, text, options, callback)
        local dropdownFrame = Instance.new("Frame", parent)
        dropdownFrame.Size = UDim2.new(0, 379, 0, 40)
        dropdownFrame.Position = position
        dropdownFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        dropdownFrame.BorderSizePixel = 0
        local uiCorner = Instance.new("UICorner", dropdownFrame)
        uiCorner.CornerRadius = UDim.new(0, 8)

        local label = Instance.new("TextLabel", dropdownFrame)
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 13

        local dropdownButton = Instance.new("TextButton", dropdownFrame)
        dropdownButton.Size = UDim2.new(0, 100, 0, 40)
        dropdownButton.Position = UDim2.new(0.7, 0, 0, 0)
        dropdownButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        dropdownButton.Text = TEXTBOX
        dropdownButton.Font = Enum.Font.GothamBold
        dropdownButton.TextSize = 16
        dropdownButton.BorderSizePixel = 0
        local uiCornerDropdown = Instance.new("UICorner", dropdownButton)
        uiCornerDropdown.CornerRadius = UDim.new(0, 8)
        
        dropdownButton.MouseButton1Click:Connect(function()
            local selection = Instance.new("Frame")
            selection.Size = UDim2.new(0, 100, 0, 160)
            selection.Position = UDim2.new(0, 0, 0, dropdownFrame.Position.Y.Offset + 40)
            selection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            selection.Parent = parent
            selection.ZIndex = 2

            local corner = Instance.new("UICorner", selection)
            corner.CornerRadius = UDim.new(0, 10)

            local scrollFrame = Instance.new("ScrollingFrame", selection)
            scrollFrame.Size = UDim2.new(0, 100, 0, 160)
            scrollFrame.Position = UDim2.new(0, 0, 0, 0)
            scrollFrame.BackgroundTransparency = 1
            scrollFrame.ScrollBarThickness = 6
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, math.min(#options, 4) * 80)
            scrollFrame.ScrollBarImageTransparency = 0.7
            scrollFrame.ZIndex = 3

            for i, option in ipairs(options) do
                local optionButton = Instance.new("TextButton", scrollFrame)
                optionButton.Size = UDim2.new(0, 95, 0, 40)
                optionButton.Position = UDim2.new(0, 0, 0, (i - 1) * 45)
                optionButton.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
                optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                optionButton.Text = option
                optionButton.Font = Enum.Font.GothamBold
                optionButton.TextSize = 10
                optionButton.BorderSizePixel = 0

                local optionCorner = Instance.new("UICorner", optionButton)
                optionCorner.CornerRadius = UDim.new(0, 8)

                optionButton.MouseButton1Click:Connect(function()
                    dropdownButton.Text = option
                    selection:Destroy()
                    if callback then
                        callback(option)
                    end
                end)
            end
        end)

        return dropdownFrame
    end

    -- Function to create text input boxes
    local function createTextInput(TEXTBOX, parent, position, text, placeholder, callback)
        local textInputFrame = Instance.new("Frame", parent)
        textInputFrame.Size = UDim2.new(0, 379, 0, 40)
        textInputFrame.Position = position
        textInputFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        textInputFrame.BorderSizePixel = 0

        local uiCorner = Instance.new("UICorner", textInputFrame)
        uiCorner.CornerRadius = UDim.new(0, 8)

        local label = Instance.new("TextLabel", textInputFrame)
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 13

        local inputBox = Instance.new("TextBox", textInputFrame)
        inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        inputBox.BorderSizePixel = 0
        inputBox.TextSize = 14
        inputBox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
        inputBox.FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        inputBox.Size = UDim2.new(0, 104, 0, 23)
        inputBox.Position = UDim2.new(0.7, 0, 0.2, 0)
        inputBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
        inputBox.Text = TEXTBOX
        inputBox.ClearTextOnFocus = false
        inputBox.TextWrapped = true

        local inputBoxCorner = Instance.new("UICorner", inputBox)
        inputBoxCorner.CornerRadius = UDim.new(0, 5)

        local inputBoxStroke = Instance.new("UIStroke", inputBox)
        inputBoxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        inputBoxStroke.Color = Color3.fromRGB(50, 50, 50)

        textInputFrame.ZIndex = 1

        inputBox.FocusLost:Connect(function()
            if callback then
                callback(inputBox.Text)
            end
        end)

        return textInputFrame
    end

    -- Function to create toggle switches
    local function createToggle(parent, position, text, initialState, callback)
        local toggleFrame = Instance.new("Frame", parent)
        toggleFrame.Size = UDim2.new(0, 379, 0, 40)
        toggleFrame.Position = position
        toggleFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        toggleFrame.BorderSizePixel = 0
        local uiCorner = Instance.new("UICorner", toggleFrame)
        uiCorner.CornerRadius = UDim.new(0, 8)

        local toggleLabel = Instance.new("TextLabel", toggleFrame)
        toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.Text = text
        toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleLabel.Font = Enum.Font.GothamBold
        toggleLabel.TextSize = 13

        local toggleButton = Instance.new("TextButton", toggleFrame)
        toggleButton.Size = UDim2.new(0.3, 0, 1, 0)
        toggleButton.Position = UDim2.new(0.7, 0, 0, 0)
        toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggleButton.Text = initialState and "ON" or "OFF"
        toggleButton.Font = Enum.Font.GothamBold
        toggleButton.TextSize = 18
        toggleButton.BorderSizePixel = 0
        local uiCornerToggle = Instance.new("UICorner", toggleButton)
        uiCornerToggle.CornerRadius = UDim.new(0, 8)

        toggleFrame.ZIndex = 2
        toggleButton.ZIndex = 3

        toggleButton.MouseButton1Click:Connect(function()
            initialState = not initialState
            toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            toggleButton.Text = initialState and "ON" or "OFF"
            if callback then
                callback(initialState)
            end
        end)

        return toggleFrame
    end

    -- GUI Settings
    local GuiSettings = {
        ["Teleport_Location"] = "Bank",
        ["Teleport_Location_Keybind"] = "c",
        ["Auto_Bring_to_Vault"] = false,
        ["Auto_Kick_on_Finished"] = false, 
        ["Auto_Kick_on_Extra_Pickup"] = false,
        ["Bring_on_Join"] = false,
        ["Join_Audio_id"] = "2927319759",
        ["Goal_Audio_id"] = "7116606826",
        ["Leave_Audio_id"] = "5606947971",
        ["Gui_Image_Background_id"] = "5430597512",
        ["Roblox_Cookie"] = false,
        ["Use_Cookie_block_method"] = false,
        ["Discord_Webhook"] = false,
        ["Send_Webhook_on_complete_order"] = false,
        ["Gui_Open_and_Close"] = "v",
    }

    -- Function to save settings
    local function saveData()
        -- This function would save settings to a data store
        -- For now it's just a placeholder
    end

    -- Function to teleport to locations
    local function teleportToLocation(location)
        local locations = {
            Bank = Vector3.new(-384, 23, -286),
            Bankroof = Vector3.new(-384, 40, -286),
            Basketball = Vector3.new(-930, 22, -481),
            Club = Vector3.new(-287, 49, -800),
            Swamp = Vector3.new(921, 50, -838),
            Train = Vector3.new(-1142, 18, -225),
            Vault = Vector3.new(-503, 40, -790)
        }
        
        local targetPosition = locations[location]
        if targetPosition and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
        end
    end

    -- Function to hide GUIs
    local function hideGUIs()
        if G2L["1"] then
            G2L["1"].Enabled = false
        end
    end
    
    
    if gethui():FindFirstChild("SELLERGUI") then 
        gethui():FindFirstChild("SELLERGUI"):Destroy()
    end 
    
    -- Create the ScreenGui and place it in the G2L area
    local player = game.Players.LocalPlayer
    G2L["1"] = Instance.new("ScreenGui", gethui())
    G2L["1"].Name = "SELLERGUI"
    G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
    
    -- Create the frame
    G2L["2"] = Instance.new("Frame", G2L["1"])
    G2L["2"]["BorderSizePixel"] = 0
    G2L["2"]["BackgroundColor3"] = Color3.fromRGB(70, 70, 70)
    G2L["2"]["Size"] = UDim2.new(0, 520, 0, 296)
    G2L["2"]["Position"] = UDim2.new(0.12741, 0, 0.29397, 0)
    G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    
    
    -- Create a new frame named "sideFrame" with size {0, 100}, {0, 300} inside G2L["2"]
    local sideFrame = Instance.new("Frame", G2L["2"])
    sideFrame.Name = "sideFrame"  -- Name the inner frame "sideFrame"
    sideFrame.Size = UDim2.new(0, 130, 0, 296)  -- Size {0, 100}, {0, 300}
    sideFrame.Position = UDim2.new(0, 0, 0, 0)  -- Position it inside the parent frame (G2L["2"])
    sideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- Set a different background color to distinguish it
    sideFrame.BorderSizePixel = 0  -- Remove the border
    sideFrame.ZIndex = 2  -- Set a higher ZIndex for sideFrame to appear above the parent
    sideFrame.BackgroundTransparency = 0.5
    
    
    -- Add rounded corners to sideFrame using UICorner
    local uiCorner = Instance.new("UICorner", sideFrame)
    uiCorner.CornerRadius = UDim.new(0, 5)  -- Adjust the radius value to make the corners more or less rounded
    
    
    
    
    -- Function to create buttons
    local function createmobile(parent, position, text, callback)
        local button = Instance.new("TextButton", parent)
        button.Size = UDim2.new(0, 100, 0, 40)
        button.Position = position
        button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Text = text
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.BorderSizePixel = 0
        local uiCorner = Instance.new("UICorner", button)
        uiCorner.CornerRadius = UDim.new(0, 8)
    
        -- Button click event
        button.MouseButton1Click:Connect(callback)
        
        return button
    end
    
    
    
    
    -- mobile
    ---------
    local tpframe = Instance.new("Frame", G2L["2"])
    tpframe.Name = "sideFrame"
    tpframe.Size = UDim2.new(0, 70, 0, 10)
    tpframe.Position = UDim2.new(0, 420, 0, -55)
    tpframe.BackgroundColor3 = Color3.fromRGB(50, 25, 50)
    tpframe.BorderSizePixel = 0
    tpframe.ZIndex = 2
    tpframe.BackgroundTransparency = 1
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    -- Create the frames for Alts
    local AltsFrame = Instance.new("ScrollingFrame", G2L["2"])
    AltsFrame["Active"] = true
    AltsFrame["BorderSizePixel"] = 0
    AltsFrame["BackgroundColor3"] = Color3.fromRGB(255, 25, 255)
    AltsFrame["ScrollBarImageTransparency"] = 1
    AltsFrame["Size"] = UDim2.new(0, 396, 0, 296)
    AltsFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    AltsFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    AltsFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    AltsFrame["BackgroundTransparency"] = 1
    
    AltsFrame.Visible = false  -- Initially hidden
    AltsFrame.ZIndex = 3
    
    
    -- Store the references to the labels to update later
    local altsStockLabel, altsBountyLabel, totalAltsLabel
    
    -- Helper function to create the boxes
    local function createBox2(parent, position, title, number)
        local box = Instance.new("Frame", parent)
        box.Size = UDim2.new(0, 379, 0, 60)
        box.Position = position
        box.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        box.BorderSizePixel = 0
        
        uicorner13 = Instance.new("UICorner", box);
    
        
        -- Title Label
        local titleLabel = Instance.new("TextLabel", box)
        titleLabel.Size = UDim2.new(1, 0, 0.5, 0)
        titleLabel.Position = UDim2.new(0, 0, 0, 0)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = title
        titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.TextSize = 16
        
        -- Number Label
        local numberLabel = Instance.new("TextLabel", box)
        numberLabel.Size = UDim2.new(1, 0, 0.5, 0)
        numberLabel.Position = UDim2.new(0, 0, 0.5, 0)
        numberLabel.BackgroundTransparency = 1
        numberLabel.Text = tostring(number)  -- Set the number dynamically
        numberLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        numberLabel.Font = Enum.Font.GothamBold
        numberLabel.TextSize = 14
        
        -- Return the number label to be stored for future updates
        return numberLabel
    end
    
    -- Create the boxes and store references to the number labels
    altsStockLabel = createBox2(AltsFrame, UDim2.new(0, 0, 0, 10), "Alts Stock", 0)
    altsBountyLabel = createBox2(AltsFrame, UDim2.new(0, 0, 0, 80), "Alts Bounty", 0)
    totalAltsLabel = createBox2(AltsFrame, UDim2.new(0, 0, 0, 150), "Total Alts", 0)
    
    
    
    -- Function to create a dynamic box to display PFP, username, and cash balance
    local function createProfileBox(parent, player, position)
        local box = Instance.new("Frame", parent)
        box.Size = UDim2.new(0, 379, 0, 80)  -- Fixed height for each profile box
        box.Position = position  -- Position passed in as argument
        box.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        box.BorderSizePixel = 0
        box.Name = "ProfileBox_" .. player.UserId  -- Unique name for the box
    
        local uicorner13 = Instance.new("UICorner", box)
    
        local PLACEHOLDER_IMAGE = "rbxassetid://0"
    
        local pfp = Instance.new("ImageLabel", box)
        pfp.Parent = box
        pfp["BorderSizePixel"] = 0;
        pfp["BackgroundColor3"] = Color3.fromRGB(34, 34, 34);
        pfp["Image"] = "rbxasset://textures/ui/GuiImagePlaceholder.png";
        pfp["Size"] = UDim2.new(0, 40, 0, 40);
        pfp["BorderColor3"] = Color3.fromRGB(0, 0, 0);
        pfp.Position = UDim2.new(0, 10, 0, 10)
        
        local userId = player.UserId
        local thumbType = Enum.ThumbnailType.HeadShot
        local thumbSize = Enum.ThumbnailSize.Size420x420
        local content, isReady = game:GetService("Players"):GetUserThumbnailAsync(userId, thumbType, thumbSize)
        
        pfp.Image =  (isReady and content) or PLACEHOLDER_IMAGE
        
        
        uicorner2 = Instance.new("UICorner", pfp);
        uicorner2["CornerRadius"] = UDim.new(1, 0);
        
        
        -- StarterGui.ScreenGui.Frame.ScrollingFrame.Frame.ImageLabel.UIStroke
        stroke2 = Instance.new("UIStroke", pfp);
        stroke2["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border;
        stroke2["Color"] = Color3.fromRGB(49, 49, 49);
    
        -- Username Label
        local usernameLabel = Instance.new("TextLabel", box)
        usernameLabel.Size = UDim2.new(0, 200, 0, 25)
        usernameLabel.Position = UDim2.new(0, 70, 0, 10)  -- Adjusted position
        usernameLabel.BackgroundTransparency = 1
        usernameLabel.Text = player.Name  -- Player's Username
        usernameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        usernameLabel.Font = Enum.Font.GothamBold
        usernameLabel.TextSize = 16
    
        -- Cash Balance Label
        local cashBalanceLabel = Instance.new("TextLabel", box)
        cashBalanceLabel.Size = UDim2.new(0, 200, 0, 25)
        cashBalanceLabel.Position = UDim2.new(0, 70, 0, 40)  -- Adjusted position
        cashBalanceLabel.BackgroundTransparency = 1
        cashBalanceLabel.Text = format(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value)
        cashBalanceLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        cashBalanceLabel.Font = Enum.Font.GothamBold
        cashBalanceLabel.TextSize = 14
    
        return box
    end
    
    -- Function to add the profile boxes dynamically under the existing ones
    local function addProfileBoxes(player)
        -- Calculate the Y position for the new box (below the existing ones)
        local positionY = 220 + (#AltsFrame:GetChildren() - 3) * 90  -- Start from 220, increment by 90 for each box
        local newBox = createProfileBox(AltsFrame, player, UDim2.new(0, 0, 0, positionY))
    end
    
    -- Function to remove a profile box when the player leaves
    local function removeProfileBox(player)
        local boxToRemove = AltsFrame:FindFirstChild("ProfileBox_" .. player.UserId)
        if boxToRemove then
            boxToRemove:Destroy()
            updateProfileBoxes()  -- Update the positions of the remaining boxes
        end
    end
    
    -- Function to update the positioning of the remaining boxes after a player leaves
    local function updateProfileBoxes()
        local positionY = 220  -- Start position for profile boxes
        for _, child in pairs(AltsFrame:GetChildren()) do
            if child.Name:find("ProfileBox_") then
                child.Position = UDim2.new(0, 0, 0, positionY)
                positionY = positionY + 90  -- Increment for the next box
            end
        end
    end
    
    
    
    
    
    
    -- Function to format the numbers with suffixes (b for billion, m for million, etc.)
    local function formatNumber(value)
        if value >= 1000000000 then
            return string.format("%.1fb", value / 1000000000)
        elseif value >= 1000000 then
            return string.format("%.1fm", value / 1000000)
        elseif value >= 1000 then
            return string.format("%.1fk", value / 1000)
        else
            return tostring(value)
        end
    end
    
    -- Function to update the box values with formatted numbers
    local function updateAltsValues(altsStock, altsBounty, totalAlts)
        altsStockLabel.Text = formatNumber(altsStock)  -- Update Alts Stock value
        altsBountyLabel.Text = formatNumber(altsBounty)  -- Update Alts Bounty value
        totalAltsLabel.Text = formatNumber(totalAlts)  -- Update Total Alts value
    end
    
    local function calculateAltsValues()
        local totalMoney = 0
        local totalBounties = 0
        local altsInGame = 0
    
        -- Iterate through all players in the game
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and isAlt(player.UserId) then  -- Exclude the local player, only alts
                altsInGame = altsInGame + 1
                
                -- Get the player's cash
                local cash = player:WaitForChild("DataFolder"):WaitForChild("Currency").Value
                totalMoney = totalMoney + cash
                
                -- Get the player's bounty (assuming it's stored in leaderstats)
                local leaderstats = player:FindFirstChild("leaderstats")
                if leaderstats then
                    local bounty = leaderstats:FindFirstChild("Bounty")
                    if bounty then
                        totalBounties = totalBounties + bounty.Value
                    end
                end
            end
        end
    
        updateAltsValues(totalMoney, totalBounties, altsInGame)
    end
    
    
    
    -- Create MiscFrame (already provided)
    local MiscFrame = Instance.new("ScrollingFrame", G2L["2"])
    MiscFrame["Active"] = true
    MiscFrame["BorderSizePixel"] = 0
    MiscFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    MiscFrame["ScrollBarImageTransparency"] = 1
    MiscFrame["Size"] = UDim2.new(0, 396, 0, 296)
    MiscFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    MiscFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    MiscFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    MiscFrame["BackgroundTransparency"] = 1
    MiscFrame.Visible = false  -- Initially hidden
    MiscFrame.ZIndex = 3
    -- Disable scroll functionality by setting CanvasSize to Size and removing the scrollbar
    MiscFrame.CanvasSize = AltsFrame.Size
    MiscFrame.ScrollBarThickness = 0  -- This hides the scrollbar
    
    
    
    -- Function to create buttons
    local function createButton(parent, position, text, callback)
        local button = Instance.new("TextButton", parent)
        button.Size = UDim2.new(0, 379, 0, 40)
        button.Position = position
        button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Text = text
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.BorderSizePixel = 0
        local uiCorner = Instance.new("UICorner", button)
        uiCorner.CornerRadius = UDim.new(0, 8)
    
        -- Button click event
        button.MouseButton1Click:Connect(callback)
        
        return button
    end
    
    -- Function to create toggle switches
    local function createToggle1(parent, position, text, initialState, callback)
        local toggleFrame = Instance.new("Frame", parent)
        toggleFrame.Size = UDim2.new(0, 379, 0, 40)
        toggleFrame.Position = position
        toggleFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        toggleFrame.BorderSizePixel = 0
        local uiCorner = Instance.new("UICorner", toggleFrame)
        uiCorner.CornerRadius = UDim.new(0, 8)
    
    
        -- Create the label
        local label = Instance.new("TextLabel", toggleFrame)
        label.Size = UDim2.new(0.7, 0, 1, 0)
        label.Position = UDim2.new(0, 10, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 16
        label.TextXAlignment = Enum.TextXAlignment.Left
    
        -- Create the toggle button
        local toggleButton = Instance.new("TextButton", toggleFrame)
        toggleButton.Size = UDim2.new(0, 60, 0, 25)
        toggleButton.Position = UDim2.new(1, -70, 0.5, -12.5)
        toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggleButton.Text = initialState and "ON" or "OFF"
        toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleButton.Font = Enum.Font.GothamBold
        toggleButton.TextSize = 14
        toggleButton.BorderSizePixel = 0
        local toggleCorner = Instance.new("UICorner", toggleButton)
        toggleCorner.CornerRadius = UDim.new(0, 5)
    
        local isToggled = initialState
    
        toggleButton.MouseButton1Click:Connect(function()
            isToggled = not isToggled
            toggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            toggleButton.Text = isToggled and "ON" or "OFF"
            callback(isToggled)
        end)
    
        return toggleFrame
    end
    
    local LocalPlayer = game.Players.LocalPlayer
    local function bringallplayers()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= LocalPlayer and isAlt(player.UserId) then
                if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    -- Teleport the alt to the local player's position
                    game.Players:Chat("/bring " .. player.Name)
                end
            end
        end
    end
    
    local function babyAlts()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= LocalPlayer and isAlt(player.UserId) then
                game.Players:Chat("/baby " .. player.Name)
            end
        end
    end
    
    
    
    
    -- Create the buttons inside MiscFrame
    createButton(MiscFrame, UDim2.new(0, 0, 0, 10), "Bring all buyers [👑]", function()
        bringallplayers()
    end)
    
    createButton(MiscFrame, UDim2.new(0, 0, 0, 60), "Baby alts [👑]", function()
        babyAlts()
    end)
    -- Define a variable to control the loop state
    local cashAuraActive = false
    
    -- Assuming you have a createToggle function and a MiscFrame for the UI elements
    createToggle1(MiscFrame, UDim2.new(0, 0, 0, 110), "Cash Aura", false, function(state)
        cashAuraActive = state
        if cashAuraActive then
            spawn(function()
                while cashAuraActive do
                    game.Players:Chat("/aura " .. LocalPlayer.Name)
                    wait(5)  -- Adjust the wait time as needed
                end
            end)
        end
    end)
    
    
    
    
    -- Declare a variable to control the Auto Drop state
    local autoDropActive = false
    
    -- Assuming you have a createToggle function and a MiscFrame for the UI elements
    createToggle1(MiscFrame, UDim2.new(0, 0, 0, 160), "Auto Drop", false, function(state)
        autoDropActive = state
        if autoDropActive then
            spawn(function()
                while autoDropActive do
                    game.Players:Chat("/drop")
                    wait(10)  -- Adjust the wait time as needed (10 seconds in this example)
                end
            end)
        end
    end)
    local IGNORED = workspace:WaitForChild("Ignored")
    
    -- Create SettingsFrame
    local SettingsFrame = Instance.new("ScrollingFrame", G2L["2"])
    SettingsFrame["Active"] = true
    SettingsFrame["BorderSizePixel"] = 0
    SettingsFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    SettingsFrame["ScrollBarImageTransparency"] = 1
    SettingsFrame["Size"] = UDim2.new(0, 396, 0, 296)
    SettingsFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    SettingsFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    SettingsFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    SettingsFrame["BackgroundTransparency"] = 1
    SettingsFrame.Visible = false
    SettingsFrame.ZIndex = 3
    -- Add keybind functionality
    local UserInputService = game:GetService("UserInputService")
    
    UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
        if gameProcessedEvent then
            return
        end

        local guiKeybind = GuiSettings["Gui_Open_and_Close"]:sub(1, 1):upper()
        local guiKeyEnum = Enum.KeyCode[guiKeybind]
        
        if input.KeyCode == guiKeyEnum then
            if G2L["1"].Enabled then
                hideGUIs()
            else
                showGUIs()
            end
        end

        local teleportKeybind = GuiSettings["Teleport_Location_Keybind"]:sub(1, 1):upper()
        local teleportKeyEnum = Enum.KeyCode[teleportKeybind]
        
        if input.KeyCode == teleportKeyEnum then
            teleportToLocation(GuiSettings["Teleport_Location"])
        end
    end)

    -- Alt Control section content
    createDropdown("Location", altcontrol, UDim2.new(0, 0, 0, 10), "Setup", {
        "Bank", 
        "Bankroof", 
        "Basketball", 
        "Club", 
        "Swamp", 
        "Train", 
        "Vault"
    }, function(location)
        game.Players:Chat("/setup " .. string.lower(location))
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 60), "Drop", false, function(state)
        if state == true then
            game.Players:Chat("/drop")
        else
            game.Players:Chat("/stop")
        end
    end)
    
    createTextInput("", altcontrol, UDim2.new(0, 0, 0, 110), "Cdrop", "Press a key", function(input)
        if input == "" then
            game.Players:Chat("/stop")
        else
            game.Players:Chat("/cdrop " .. string.lower(input))
        end
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 160), "Airlock", false, function(state)
        if state == true then
            game.Players:Chat("/airlock")
        else
            game.Players:Chat("/hide")
        end
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 210), "Hide", false, function(state)
        if state == true then
            game.Players:Chat("/hide")
        else
            game.Players:Chat("/airlock")
        end
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 260), "Line", false, function(state)
        game.Players:Chat("/line")
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 310), "Aura", false, function(state)
        if state == true then
            game.Players:Chat("/aura")
        else
            game.Players:Chat("/stop")
        end
    end)
    
    createTextInput("", altcontrol, UDim2.new(0, 0, 0, 360), "Redeem", "Press a key", function(input)
        game.Players:Chat("/redeem " .. input)
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 410), "Freeze", false, function(state)
        if state == true then
            game.Players:Chat("/freeze")
        else
            game.Players:Chat("/unfreeze")
        end
    end)
    
    createTextInput("", altcontrol, UDim2.new(0, 0, 0, 460), "Advert", "Press a key", function(input)
        if input == "" then
            game.Players:Chat("/advert off")
        else
            game.Players:Chat("/advert " .. input)
        end
    end)
    
    createTextInput("", altcontrol, UDim2.new(0, 0, 0, 510), "Say", "Press a key", function(input)
        game.Players:Chat("/say " .. input)
    end)
    
    createTextInput("", altcontrol, UDim2.new(0, 0, 0, 560), "Join Crew", "Press a key", function(input)
        game.Players:Chat("/joincrew " .. input)
    end)
    
    createDropdown("Animations", altcontrol, UDim2.new(0, 0, 0, 610), "Animation", {
        "fly", 
        "sturdy", 
        "griddy", 
        "tpose", 
        "speed"
    }, function(animation)
        game.Players:Chat("/animation " .. animation)
    end)
    
    createDropdown("Circle", altcontrol, UDim2.new(0, 0, 0, 660), "Size", {
        "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"
    }, function(size)
        game.Players:Chat("/circle " .. size)
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 710), "Tower", false, function(state)
        game.Players:Chat("/tower")
    end)
    
    createToggle(altcontrol, UDim2.new(0, 0, 0, 760), "Dupe", false, function(state)
        game.Players:Chat("/dupefor")
    end)
    
    createDropdown("Location", altcontrol, UDim2.new(0, 0, 0, 810), "Setup OG", {
        "Bank", 
        "Bankroof", 
        "Basketball", 
        "Club", 
        "Swamp", 
        "Train", 
        "Vault"
    }, function(location)
        game.Players:Chat("/setup " .. string.lower(location) .. " og")
    end)

    -- Settings section content
    createDropdown(GuiSettings["Teleport_Location"], SettingsFrame, UDim2.new(0, 0, 0, 10), "Teleport Location", {
        "Bank", 
        "Bankroof", 
        "Basketball", 
        "Club", 
        "Swamp", 
        "Train", 
        "Vault"
    }, function(location)
        GuiSettings["Teleport_Location"] = location
        saveData()
    end)
    
    createTextInput(GuiSettings["Teleport_Location_Keybind"], SettingsFrame, UDim2.new(0, 0, 0, 60), "Teleport Location Keybind", "Press a key", function(input)
        GuiSettings["Teleport_Location_Keybind"] = input
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 110), "Auto Bring to Vault on Finished [👑]", GuiSettings["Auto_Bring_to_Vault"], function(state)
        GuiSettings["Auto_Bring_to_Vault"] = state
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 160), "Auto Kick on Finished [👑]", GuiSettings["Auto_Kick_on_Finished"], function(state)
        GuiSettings["Auto_Kick_on_Finished"] = state
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 210), "Auto Kick on Extra Pickup [👑]", GuiSettings["Auto_Kick_on_Extra_Pickup"], function(state)
        GuiSettings["Auto_Kick_on_Extra_Pickup"] = state
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 260), "Bring on Join [👑]", GuiSettings["Bring_on_Join"], function(state)
        GuiSettings["Bring_on_Join"] = state
        saveData()
    end)
    
    createTextInput(GuiSettings["Roblox_Cookie"], SettingsFrame, UDim2.new(0, 0, 0, 310), "Roblox Cookie", "Enter cookie", function(input)
        GuiSettings["Roblox_Cookie"] = input
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 360), "Use Cookie block method [👑]", GuiSettings["Use_Cookie_block_method"], function(state)
        GuiSettings["Use_Cookie_block_method"] = state
        saveData()
    end)
    
    createTextInput(GuiSettings["Discord_Webhook"], SettingsFrame, UDim2.new(0, 0, 0, 410), "Discord Webhook", "Enter webhook URL", function(input)
        GuiSettings["Discord_Webhook"] = input
        saveData()
    end)
    
    createToggle(SettingsFrame, UDim2.new(0, 0, 0, 460), "Send Webhook on complete order", GuiSettings["Send_Webhook_on_complete_order"], function(state)
        GuiSettings["Send_Webhook_on_complete_order"] = state
        saveData()
    end)
    
    createTextInput(GuiSettings["Gui_Open_and_Close"], SettingsFrame, UDim2.new(0, 0, 0, 510), "Gui Open and Close", "Press a key", function(input)
        GuiSettings["Gui_Open_and_Close"] = input
        saveData()
    end)
    
    createTextInput(GuiSettings["Join_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 560), "Join Audio id", "Enter audio ID", function(input)
        GuiSettings["Join_Audio_id"] = input
        saveData()
    end)
    
    createTextInput(GuiSettings["Goal_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 610), "Goal Audio id", "Enter audio ID", function(input)
        GuiSettings["Goal_Audio_id"] = input
        saveData()
    end)
    
    createTextInput(GuiSettings["Leave_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 660), "Leave Audio id", "Enter audio ID", function(input)
        GuiSettings["Leave_Audio_id"] = input
        saveData()
    end)

    -- Create altcontrol Frame
    local altcontrol = Instance.new("ScrollingFrame", G2L["2"])
    altcontrol["Active"] = true
    altcontrol["BorderSizePixel"] = 0
    altcontrol["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    altcontrol["ScrollBarImageTransparency"] = 1
    altcontrol["Size"] = UDim2.new(0, 396, 0, 296)
    altcontrol["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    altcontrol["Position"] = UDim2.new(0.24, 10, 0, 0)
    altcontrol["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    altcontrol["BackgroundTransparency"] = 1
    altcontrol.Visible = false
    altcontrol.ZIndex = 3
    altcontrol.CanvasSize = UDim2.new(0, 0, 0, 1000)
    altcontrol.ScrollBarThickness = 6

    -- Navigation buttons data
    local buttonsData = {
        {Text = "Players", Position = UDim2.new(0, 0, 0, 0), Frame = G2L["7"]},
        {Text = "Alts", Position = UDim2.new(0, 0, 0, 50), Frame = AltsFrame},
        {Text = "Alt Control", Position = UDim2.new(0, 0, 0, 100), Frame = altcontrol},
        {Text = "Misc", Position = UDim2.new(0, 0, 0, 150), Frame = MiscFrame},
        {Text = "Settings", Position = UDim2.new(0, 0, 0, 200), Frame = SettingsFrame}
    }

    -- Create buttons inside the sideFrame
    for _, buttonData in ipairs(buttonsData) do
        local button = Instance.new("TextButton", sideFrame)
        button.Size = UDim2.new(1, 0, 0, 40)
        button.Position = buttonData.Position
        button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Text = buttonData.Text
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.BorderSizePixel = 0

        -- Add rounded corners to each button
        local buttonUICorner = Instance.new("UICorner", button)
        buttonUICorner.CornerRadius = UDim.new(0, 8)

        -- Add functionality for button click
        button.MouseButton1Click:Connect(function()

            -- Hide all frames first
            G2L["7"].Visible = false
            AltsFrame.Visible = false
            MiscFrame.Visible = false
            SettingsFrame.Visible = false
            altcontrol.Visible = false

            -- Show the corresponding frame for the button clicked
            if button.Text == "Players" then
                G2L["7"].Visible = true
            elseif button.Text == "Alts" then
                calculateAltsValues()
                AltsFrame.Visible = true
            elseif button.Text == "Misc" then
                MiscFrame.Visible = true
            elseif button.Text == "Settings" then
                SettingsFrame.Visible = true
            elseif button.Text == "Alt Control" then
                altcontrol.Visible = true
            end
        end)
    end

    -- StarterGui.ScreenGui.Frame.UICorner
    G2L["3"] = Instance.new("UICorner", G2L["2"])

    -- StarterGui.ScreenGui.Frame.ScrollingFrame
    -- player cards FRAME
    G2L["7"] = Instance.new("ScrollingFrame", G2L["2"])
    G2L["7"]["Active"] = true
    G2L["7"]["BorderSizePixel"] = 0
    G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    G2L["7"]["ScrollBarImageTransparency"] = 1
    G2L["7"]["Size"] = UDim2.new(0, 410, 0, 296)
    G2L["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    G2L["7"]["Position"] = UDim2.new(0.24, 0, 0, 0)
    G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    G2L["7"]["BackgroundTransparency"] = 1

    -- StarterGui.ScreenGui.Frame.ScrollingFrame.UIListLayout
    G2L["8"] = Instance.new("UIListLayout", G2L["7"])
    G2L["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder
    G2L["8"].Padding = UDim.new(0, 5)

    G2L["8"]:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        -- Add extra space for padding and any offsets that might be required
        G2L["7"].CanvasSize = UDim2.new(0, 0, 0, G2L["8"].AbsoluteContentSize.Y + 10)
    end)

    -- Player Data System
    local playerData = {}
    
    -- Initialize data for a player
    function initializePlayerData(player)
        if not playerData[player.Name] then
            playerData[player.Name] = {
                credit = tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value),
                need = 0,
                missing = 0,
                shouldhave = 0,
                last_cash_amount = 0,
                CASH_SPENT = 0,
                notificationPlayed = false,
                istracking = false,
                starter = 0,
                need2 = 0
            }
        end
    end
    
    -- Access player data
    function getPlayerData(player)
        return playerData[player.Name] or {}
    end

    -- Function to parse amount with suffixes
    local function parseAmount(input)
        input = input:match("^%s*(.-)%s*$")
        local num, suffix = input:match("^(%d+%.?%d*)([kmb]?)$")
        num = tonumber(num)
        
        if num then
            if suffix == "k" then
                return num * 1000
            elseif suffix == "m" then
                return num * 1000000
            elseif suffix == "b" then
                return num * 1000000000
            else
                return num
            end
        else
            return 0
        end
    end

    -- Function to create player boxes
    local function createbox(player, THREE, LABEL1)
        local frame = Instance.new("Frame", G2L["7"])
        frame["BorderSizePixel"] = 0
        frame["BackgroundColor3"] = Color3.fromRGB(28, 28, 28)
        frame["Size"] = UDim2.new(0, 379, 0, 76)
        frame["Position"] = UDim2.new(-0.02488, 0, -0.01718, 0)
        frame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        frame.Name = player.Name .. "_Box"
        
        local uicorner1 = Instance.new("UICorner", frame)
        
        local PLACEHOLDER_IMAGE = "rbxassetid://0"
        
        local image1 = Instance.new("ImageLabel")
        image1.Parent = frame
        image1["BorderSizePixel"] = 0
        image1["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
        image1["Image"] = "rbxasset://textures/ui/GuiImagePlaceholder.png"
        image1["Size"] = UDim2.new(0, 40, 0, 40)
        image1["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        image1["Position"] = UDim2.new(0.01583, 0, 0.05117, 0)
        
        local userId = player.UserId
        local thumbType = Enum.ThumbnailType.HeadShot
        local thumbSize = Enum.ThumbnailSize.Size420x420
        local content, isReady = game:GetService("Players"):GetUserThumbnailAsync(userId, thumbType, thumbSize)
        
        image1.Image = (isReady and content) or PLACEHOLDER_IMAGE
        
        local uicorner2 = Instance.new("UICorner", image1)
        uicorner2["CornerRadius"] = UDim.new(1, 0)
        
        local stroke2 = Instance.new("UIStroke", image1)
        stroke2["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
        stroke2["Color"] = Color3.fromRGB(49, 49, 49)
        
        -- Should Have label
        local textlabel1 = Instance.new("TextLabel", frame)
        textlabel1["BorderSizePixel"] = 0
        textlabel1["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
        textlabel1["TextSize"] = 14
        textlabel1["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        textlabel1["TextColor3"] = Color3.fromRGB(255, 255, 255)
        textlabel1["BackgroundTransparency"] = 1
        textlabel1["Size"] = UDim2.new(0, 200, 0, 26)
        textlabel1["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        textlabel1["Text"] = LABEL1 or ""
        textlabel1["Name"] = "ShouldHave"
        textlabel1["Position"] = UDim2.new(0.67018, 0, -0.00049, 0)
        
        -- Username label
        local label2 = Instance.new("TextLabel", frame)
        label2["BorderSizePixel"] = 0
        label2["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
        label2["TextSize"] = 14
        label2["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        label2["TextColor3"] = Color3.fromRGB(255, 255, 255)
        label2["BackgroundTransparency"] = 1
        label2["Size"] = UDim2.new(0, 145, 0, 26)
        label2["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        label2["Text"] = player.Name
        label2["Name"] = "NAYM"
        label2["Position"] = UDim2.new(0.15, 0, -0.00049, 0)
        
        -- Missing label
        local label3 = Instance.new("TextLabel", frame)
        label3["BorderSizePixel"] = 0
        label3["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
        label3["TextSize"] = 14
        label3["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        label3["TextColor3"] = Color3.fromRGB(64, 64, 64)
        label3["BackgroundTransparency"] = 1
        label3["Size"] = UDim2.new(0, 200, 0, 26)
        label3["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        label3["Text"] = THREE or ""
        label3["Name"] = "Missing"
        label3["Position"] = UDim2.new(0.67018, 0, 0.21991, 0)
        
        -- Credit label
        local label4 = Instance.new("TextLabel", frame)
        label4["BorderSizePixel"] = 0
        label4["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
        label4["TextSize"] = 14
        label4["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        label4["TextColor3"] = Color3.fromRGB(0, 131, 0)
        label4["BackgroundTransparency"] = 1
        label4["Size"] = UDim2.new(0, 200, 0, 26)
        label4["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        label4["Text"] = format(tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value))
        label4["Name"] = "Credit"
        label4["Position"] = UDim2.new(0.15, 0, 0.238, 0)
        
        -- Input textbox
        local textbox = Instance.new("TextBox", frame)
        textbox["TextColor3"] = Color3.fromRGB(255, 255, 255)
        textbox["BorderSizePixel"] = 0
        textbox["TextSize"] = 14
        textbox["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
        textbox["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
        textbox["Size"] = UDim2.new(0, 104, 0, 23)
        textbox["Position"] = UDim2.new(0.67018, 0, 0.61136, 0)
        textbox["BorderColor3"] = Color3.fromRGB(0, 0, 0)
        textbox["Text"] = ""
        
        local corner4 = Instance.new("UICorner", textbox)
        corner4["CornerRadius"] = UDim.new(0, 5)
        
        local uistroke4 = Instance.new("UIStroke", textbox)
        uistroke4["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
        uistroke4["Color"] = Color3.fromRGB(50, 50, 50)

        -- Handle textbox input
        textbox.FocusLost:Connect(function(enterPressed)
            if enterPressed then
                local inputValue = parseAmount(textbox.Text)
                if inputValue > 0 then
                    local data = getPlayerData(player)
                    data.need = inputValue
                    data.shouldhave = data.credit + inputValue
                    data.missing = data.shouldhave - tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value)
                    
                    textlabel1.Text = "Should have: " .. format(data.shouldhave)
                    label3.Text = "Missing: " .. format(data.missing)
                    
                    textbox.Text = ""
                end
            end
        end)

        -- Update cash in real time
        player:WaitForChild("DataFolder"):WaitForChild("Currency").Changed:Connect(function(newValue)
            label4.Text = format(newValue)
            local data = getPlayerData(player)
            if data.need > 0 then
                data.missing = data.shouldhave - newValue
                label3.Text = "Missing: " .. format(data.missing)
            end
        end)

        return frame
    end

    -- Create boxes for all players
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            initializePlayerData(player)
            createbox(player, "", "")
        end
    end

    -- Handle new players joining
    game.Players.PlayerAdded:Connect(function(player)
        wait(2) -- Wait for player to load
        if player ~= game.Players.LocalPlayer then
            initializePlayerData(player)
            createbox(player, "", "")
        end
    end)

    -- Handle players leaving
    game.Players.PlayerRemoving:Connect(function(player)
        local box = G2L["7"]:FindFirstChild(player.Name .. "_Box")
        if box then
            box:Destroy()
        end
        playerData[player.Name] = nil
    end)

    print("HOST GUI Loaded Successfully!")
    print("Ran")
end

local GC = getconnections or get_signal_cons
if GC then
    for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
        if v["Disable"] then
            v["Disable"](v)
        elseif v["Disconnect"] then
            v["Disconnect"](v)
        end
    end
end
print("Ran")
