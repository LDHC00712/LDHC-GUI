local exe_name, exe_version = identifyexecutor()
local function home999() end
local function home888() end

if exe_name ~= "Wave Windows" then
    hookfunction(home888, home999)
    if isfunctionhooked(home888) == false then
        game.Players.LocalPlayer:Destroy()
        return LPH_CRASH()
    end
end 

local function check_env(env)
    for _, func in env do
        if type(func) ~= "function" then
            continue
        end

        local functionhook = isfunctionhooked(func)

        if functionhook then
            game.Players.LocalPlayer:Destroy()
            return LPH_CRASH()
        end
    end
end

check_env( getgenv() )
check_env( getrenv() )
--

local Lua_Fetch_Connections = getconnections
local Lua_Fetch_Upvalues = getupvalues
local Lua_Hook = hookfunction 
local Lua_Hook_Method = hookmetamethod
local Lua_Unhook = restorefunction
local Lua_Replace_Function = replaceclosure
local Lua_Set_Upvalue = setupvalue
local Lua_Clone_Function = clonefunction

local Game_RunService = game:GetService("RunService")
local Game_LogService = game:GetService("LogService")
local Game_LogService_MessageOut = Game_LogService.MessageOut

local String_Lower = string.lower
local Table_Find = table.find
local Get_Type = type

local Current_Connections = {};
local Hooked_Connections = {};

local function Test_Table(Table, Return_Type)
for TABLE_INDEX, TABLE_VALUE in Table do
    if type(TABLE_VALUE) == String_Lower(Return_Type) then
        return TABLE_VALUE, TABLE_INDEX
    end

    continue
end
end

local function Print_Table(Table)
table.foreach(Table, print)
end

if getgenv().DEBUG then
print("[auth.injected.live] Waiting...")
end

local good_check = 0

function auth_heart()
return true , true
end

function Lua_Common_Intercept(old, ...)
print(...)
return old(...)
end

function XVNP_L(CONNECTION)
local s, e = pcall(function()
    local OPENAC_TABLE = Lua_Fetch_Upvalues(CONNECTION.Function)[9]
    local OPENAC_FUNCTION = OPENAC_TABLE[1]
    local IGNORED_INDEX = {3, 12, 1, 11, 15, 8, 20, 18, 22}

    Lua_Set_Upvalue(OPENAC_FUNCTION, 14, function(...)
        return function(...)
            local args = {...}

            if type(args[1]) == "table" and args[1][1] then
                pcall(function()
                    if type(args[1][1]) == "userdata" then
                        args[1][1]:Disconnect()
                        args[1][2]:Disconnect()
                        args[1][3]:Disconnect()
                        args[1][4]:Disconnect()
                    end
                end)
            end 
        end
    end)

    Lua_Set_Upvalue(OPENAC_FUNCTION, 1, function(...)
        task.wait(200)
    end)

    hookfunction(OPENAC_FUNCTION, function(...)
        return {}
    end)
end)
end

local XVNP_LASTUPDATE = 0
local XVNP_UPDATEINTERVAL = 5

local XVNP_CONNECTIONSNIFFER;

XVNP_CONNECTIONSNIFFER = Game_RunService.RenderStepped:Connect(function()
if #Lua_Fetch_Connections(Game_LogService_MessageOut) >= 2 then
    XVNP_CONNECTIONSNIFFER:Disconnect()
end

if tick() - XVNP_LASTUPDATE >= XVNP_UPDATEINTERVAL then
    XVNP_LASTUPDATE = tick() 

    local OpenAc_Connections = Lua_Fetch_Connections(Game_LogService_MessageOut)

    for _, CONNECTION in OpenAc_Connections do
        if not table.find(Current_Connections, CONNECTION) then
            table.insert(Current_Connections, CONNECTION)
            table.insert(Hooked_Connections, CONNECTION)

            XVNP_L(CONNECTION)
            
        end
    end
end
end)

local last_beat = 0
Game_RunService.RenderStepped:Connect(function()
if last_beat + 1 < tick() then
    last_beat = tick() + 1 

    local what, are = auth_heart()

    if not are or not what then
        if good_check <= 0 then
            game.Players.LocalPlayer:Destroy()
            return LPH_CRASH()
        else
            good_check -=1
        end
    else
        good_check += 1
    end

end
end)

if getgenv().DEBUG then
print("[auth.injected.live] Started Emulation Thread")
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local GroupService = game:GetService("GroupService")
local Lighting = game:GetService("Lighting")
local ChatService = game:GetService("Chat")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

--Module scripts
local mainModule = require(ReplicatedStorage:WaitForChild("MainModule"))

--Wait for player to be added
local PLAYER = Players.LocalPlayer

local MAIN_EVENT = ReplicatedStorage:WaitForChild("MainEvent")
local PLAYER_GUI = PLAYER:WaitForChild("PlayerGui")

local PLAYER_CREW = PLAYER:WaitForChild("DataFolder"):WaitForChild("Information"):WaitForChild("Crew")

--IGNORED
local IGNORED = workspace:WaitForChild("Ignored")

local function isAlt(userId)
    if not getgenv().alts then
        return false
    end
    for i, id in ipairs(getgenv().alts) do
        if userId == id then
            return true
        end
    end
    return false
end

local PLAYER_CASH = PLAYER:WaitForChild("DataFolder"):WaitForChild("Currency")

-- Function to format numbers with commas
local function commaValue(amount)
    local formatted = tostring(amount)
    local k
    while true do  
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k==0) then
            break
        end
    end
    return formatted
end

-- Only load HOST GUI if NOT an alt
if isAlt(PLAYER.UserId) == false then
    local function format(value)
        -- Check if the value is negative
        local isNegative = value < 0
        value = math.abs(value)  -- Take the absolute value for formatting
    
        -- Format the number with commas
        local formatted = tostring(value):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
    
        -- Add the dollar sign at the beginning
        if isNegative then
            formatted = "$-" .. formatted
        else
            formatted = "$" .. formatted
        end
        
        return formatted
    end
    
    
    hookfunction(game:GetService("UserInputService").GetFocusedTextBox, newcclosure(function(...)
        return 
    end))
    
    
    
    local G2L = {};
    
    
        -- Get the UserInputService to listen for key events
    local UserInputService = game:GetService("UserInputService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    
    -- Function to hide all GUIs
    local function hideGUIs()
        if G2L["1"] then
            G2L["1"].Enabled = false  -- Disables the GUI by setting the "Enabled" property to false
        end
    end
    
    -- Function to show all GUIs
    local function showGUIs()
        if G2L["1"] then
            G2L["1"].Enabled = true  -- Enables the GUI by setting the "Enabled" property to true
        end
    end
    
    
    if gethui():FindFirstChild("SELLERGUI") then 
        gethui():FindFirstChild("SELLERGUI"):Destroy()
    end 
    
    -- Assuming G2L is already defined somewhere in the script
    
    -- Create the ScreenGui and place it in the G2L area
    local player = game.Players.LocalPlayer
    G2L["1"] = Instance.new("ScreenGui", gethui())
    G2L["1"].Name = "SELLERGUI"
    G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling
    
    -- Create the frame
    G2L["2"] = Instance.new("Frame", G2L["1"])
    G2L["2"]["BorderSizePixel"] = 0
    G2L["2"]["BackgroundColor3"] = Color3.fromRGB(70, 70, 70)
    G2L["2"]["Size"] = UDim2.new(0, 520, 0, 296)
    G2L["2"]["Position"] = UDim2.new(0.12741, 0, 0.29397, 0)
    G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    
    
    -- Create a new frame named "sideFrame" with size {0, 100}, {0, 300} inside G2L["2"]
    local sideFrame = Instance.new("Frame", G2L["2"])
    sideFrame.Name = "sideFrame"  -- Name the inner frame "sideFrame"
    sideFrame.Size = UDim2.new(0, 130, 0, 296)  -- Size {0, 100}, {0, 300}
    sideFrame.Position = UDim2.new(0, 0, 0, 0)  -- Position it inside the parent frame (G2L["2"])
    sideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- Set a different background color to distinguish it
    sideFrame.BorderSizePixel = 0  -- Remove the border
    sideFrame.ZIndex = 2  -- Set a higher ZIndex for sideFrame to appear above the parent
    sideFrame.BackgroundTransparency = 0.5
    
    
    -- Add rounded corners to sideFrame using UICorner
    local uiCorner = Instance.new("UICorner", sideFrame)
    uiCorner.CornerRadius = UDim.new(0, 5)  -- Adjust the radius value to make the corners more or less rounded

    -- Create Players Frame (G2L["7"])
    G2L["7"] = Instance.new("ScrollingFrame", G2L["2"])
    G2L["7"]["Active"] = true
    G2L["7"]["BorderSizePixel"] = 0
    G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    G2L["7"]["ScrollBarImageTransparency"] = 1
    G2L["7"]["Size"] = UDim2.new(0, 410, 0, 296)
    G2L["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    G2L["7"]["Position"] = UDim2.new(0.24, 0, 0, 0)
    G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    G2L["7"]["BackgroundTransparency"] = 1
    G2L["7"].ZIndex = 3
    G2L["7"].Visible = true  -- Show Players frame by default

    -- Add UIListLayout for Players frame
    G2L["8"] = Instance.new("UIListLayout", G2L["7"])
    G2L["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder
    G2L["8"].Padding = UDim.new(0, 5)

    G2L["8"]:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        G2L["7"].CanvasSize = UDim2.new(0, 0, 0, G2L["8"].AbsoluteContentSize.Y + 10)
    end)

    -- Create Alts Frame
    local AltsFrame = Instance.new("ScrollingFrame", G2L["2"])
    AltsFrame["Active"] = true
    AltsFrame["BorderSizePixel"] = 0
    AltsFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    AltsFrame["ScrollBarImageTransparency"] = 1
    AltsFrame["Size"] = UDim2.new(0, 396, 0, 296)
    AltsFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    AltsFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    AltsFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    AltsFrame["BackgroundTransparency"] = 1
    AltsFrame.Visible = false
    AltsFrame.ZIndex = 3

    -- Add test content to Alts Frame
    local altsTestLabel = Instance.new("TextLabel", AltsFrame)
    altsTestLabel.Size = UDim2.new(1, 0, 0, 50)
    altsTestLabel.Position = UDim2.new(0, 0, 0, 10)
    altsTestLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    altsTestLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    altsTestLabel.Text = "ALTS SECTION - Working!"
    altsTestLabel.Font = Enum.Font.GothamBold
    altsTestLabel.TextSize = 18
    altsTestLabel.BorderSizePixel = 0
    local altsCorner = Instance.new("UICorner", altsTestLabel)
    altsCorner.CornerRadius = UDim.new(0, 8)

    -- Create Alt Control Frame
    local altcontrol = Instance.new("ScrollingFrame", G2L["2"])
    altcontrol["Active"] = true
    altcontrol["BorderSizePixel"] = 0
    altcontrol["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    altcontrol["ScrollBarImageTransparency"] = 1
    altcontrol["Size"] = UDim2.new(0, 396, 0, 296)
    altcontrol["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    altcontrol["Position"] = UDim2.new(0.24, 10, 0, 0)
    altcontrol["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    altcontrol["BackgroundTransparency"] = 1
    altcontrol.Visible = false
    altcontrol.ZIndex = 3
    altcontrol.CanvasSize = UDim2.new(0, 0, 0, 1000)
    altcontrol.ScrollBarThickness = 6

    -- Add test content to Alt Control Frame
    local altControlTestLabel = Instance.new("TextLabel", altcontrol)
    altControlTestLabel.Size = UDim2.new(1, 0, 0, 50)
    altControlTestLabel.Position = UDim2.new(0, 0, 0, 10)
    altControlTestLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    altControlTestLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    altControlTestLabel.Text = "ALT CONTROL SECTION - Working!"
    altControlTestLabel.Font = Enum.Font.GothamBold
    altControlTestLabel.TextSize = 18
    altControlTestLabel.BorderSizePixel = 0
    local altControlCorner = Instance.new("UICorner", altControlTestLabel)
    altControlCorner.CornerRadius = UDim.new(0, 8)

    -- Create Misc Frame
    local MiscFrame = Instance.new("ScrollingFrame", G2L["2"])
    MiscFrame["Active"] = true
    MiscFrame["BorderSizePixel"] = 0
    MiscFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    MiscFrame["ScrollBarImageTransparency"] = 1
    MiscFrame["Size"] = UDim2.new(0, 396, 0, 296)
    MiscFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    MiscFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    MiscFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    MiscFrame["BackgroundTransparency"] = 1
    MiscFrame.Visible = false
    MiscFrame.ZIndex = 3
    MiscFrame.CanvasSize = AltsFrame.Size
    MiscFrame.ScrollBarThickness = 0

    -- Add test content to Misc Frame
    local miscTestLabel = Instance.new("TextLabel", MiscFrame)
    miscTestLabel.Size = UDim2.new(1, 0, 0, 50)
    miscTestLabel.Position = UDim2.new(0, 0, 0, 10)
    miscTestLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    miscTestLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    miscTestLabel.Text = "MISC SECTION - Working!"
    miscTestLabel.Font = Enum.Font.GothamBold
    miscTestLabel.TextSize = 18
    miscTestLabel.BorderSizePixel = 0
    local miscCorner = Instance.new("UICorner", miscTestLabel)
    miscCorner.CornerRadius = UDim.new(0, 8)

    -- Create Settings Frame
    local SettingsFrame = Instance.new("ScrollingFrame", G2L["2"])
    SettingsFrame["Active"] = true
    SettingsFrame["BorderSizePixel"] = 0
    SettingsFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    SettingsFrame["ScrollBarImageTransparency"] = 1
    SettingsFrame["Size"] = UDim2.new(0, 396, 0, 296)
    SettingsFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
    SettingsFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
    SettingsFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    SettingsFrame["BackgroundTransparency"] = 1
    SettingsFrame.Visible = false
    SettingsFrame.ZIndex = 3
    SettingsFrame.CanvasSize = UDim2.new(0, 0, 0, 720)
    SettingsFrame.ScrollBarThickness = 6

    -- Add test content to Settings Frame
    local settingsTestLabel = Instance.new("TextLabel", SettingsFrame)
    settingsTestLabel.Size = UDim2.new(1, 0, 0, 50)
    settingsTestLabel.Position = UDim2.new(0, 0, 0, 10)
    settingsTestLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    settingsTestLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    settingsTestLabel.Text = "SETTINGS SECTION - Working!"
    settingsTestLabel.Font = Enum.Font.GothamBold
    settingsTestLabel.TextSize = 18
    settingsTestLabel.BorderSizePixel = 0
    local settingsCorner = Instance.new("UICorner", settingsTestLabel)
    settingsCorner.CornerRadius = UDim.new(0, 8)

    -- Add test content to Players Frame
    local playersTestLabel = Instance.new("TextLabel", G2L["7"])
    playersTestLabel.Size = UDim2.new(1, 0, 0, 50)
    playersTestLabel.Position = UDim2.new(0, 0, 0, 0)
    playersTestLabel.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    playersTestLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    playersTestLabel.Text = "PLAYERS SECTION - Working!"
    playersTestLabel.Font = Enum.Font.GothamBold
    playersTestLabel.TextSize = 18
    playersTestLabel.BorderSizePixel = 0
    local playersCorner = Instance.new("UICorner", playersTestLabel)
    playersCorner.CornerRadius = UDim.new(0, 8)

    -- Navigation buttons data
    local buttonsData = {
        {Text = "Players", Position = UDim2.new(0, 0, 0, 0), Frame = G2L["7"]},
        {Text = "Alts", Position = UDim2.new(0, 0, 0, 50), Frame = AltsFrame},
        {Text = "Alt Control", Position = UDim2.new(0, 0, 0, 100), Frame = altcontrol},
        {Text = "Misc", Position = UDim2.new(0, 0, 0, 150), Frame = MiscFrame},
        {Text = "Settings", Position = UDim2.new(0, 0, 0, 200), Frame = SettingsFrame}
    }

    -- Create navigation buttons inside the sideFrame
    for _, buttonData in ipairs(buttonsData) do
        local button = Instance.new("TextButton", sideFrame)
        button.Size = UDim2.new(1, 0, 0, 40)
        button.Position = buttonData.Position
        button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Text = buttonData.Text
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.BorderSizePixel = 0

        -- Add rounded corners to each button
        local buttonUICorner = Instance.new("UICorner", button)
        buttonUICorner.CornerRadius = UDim.new(0, 8)

        -- Add functionality for button click
        button.MouseButton1Click:Connect(function()
            print("Button clicked: " .. button.Text)  -- Debug print
            
            -- Reset all button colors first
            for _, otherButtonData in ipairs(buttonsData) do
                for _, otherButton in pairs(sideFrame:GetChildren()) do
                    if otherButton:IsA("TextButton") then
                        otherButton.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
                    end
                end
            end
            
            -- Highlight the clicked button
            button.BackgroundColor3 = Color3.fromRGB(0, 162, 255)

            -- Hide all frames first
            G2L["7"].Visible = false
            AltsFrame.Visible = false
            MiscFrame.Visible = false
            SettingsFrame.Visible = false
            altcontrol.Visible = false

            -- Show the corresponding frame for the button clicked
            if button.Text == "Players" then
                G2L["7"].Visible = true
                print("Showing Players frame")
            elseif button.Text == "Alts" then
                AltsFrame.Visible = true
                print("Showing Alts frame")
            elseif button.Text == "Alt Control" then
                altcontrol.Visible = true
                print("Showing Alt Control frame")
            elseif button.Text == "Misc" then
                MiscFrame.Visible = true
                print("Showing Misc frame")
            elseif button.Text == "Settings" then
                SettingsFrame.Visible = true
                print("Showing Settings frame")
            end
        end)
    end

    -- Set Players button as default selected
    spawn(function()
        wait(0.1)
        for _, button in pairs(sideFrame:GetChildren()) do
            if button:IsA("TextButton") and button.Text == "Players" then
                button.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
                break
            end
        end
    end)

    print("HOST GUI Loaded Successfully with Navigation!")
end

local GC = getconnections or get_signal_cons
if GC then
    for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
        if v["Disable"] then
            v["Disable"](v)
        elseif v["Disconnect"] then
            v["Disconnect"](v)
        end
    end
end
print("Ran")
