-- HOST GUI - Original from gui.lua
-- HOST GUI à¹€à¸‰à¸žà¸²à¸°à¸ªà¹ˆà¸§à¸™
local function format(value)
    -- Check if the value is negative
    local isNegative = value < 0
    value = math.abs(value)  -- Take the absolute value for formatting

    -- Format the number with commas
    local formatted = tostring(value):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")

    -- Add the dollar sign at the beginning
    if isNegative then
        formatted = "$-" .. formatted
    else
        formatted = "$" .. formatted
    end
    
    return formatted
end

hookfunction(game:GetService("UserInputService").GetFocusedTextBox, newcclosure(function(...)
    return 
end))

local G2L = {};

-- Get the UserInputService to listen for key events
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Function to hide all GUIs
local function hideGUIs()
    if G2L["1"] then
        G2L["1"].Enabled = false  -- Disables the GUI by setting the "Enabled" property to false
    end
end

-- Function to show all GUIs
local function showGUIs()
    if G2L["1"] then
        G2L["1"].Enabled = true  -- Enables the GUI by setting the "Enabled" property to true
    end
end

if gethui():FindFirstChild("SELLERGUI") then 
    gethui():FindFirstChild("SELLERGUI"):Destroy()
end 

-- Create the ScreenGui and place it in the G2L area
local player = game.Players.LocalPlayer
G2L["1"] = Instance.new("ScreenGui", gethui())
G2L["1"].Name = "SELLERGUI"
G2L["1"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling

-- Create the frame
G2L["2"] = Instance.new("Frame", G2L["1"])
G2L["2"]["BorderSizePixel"] = 0
G2L["2"]["BackgroundColor3"] = Color3.fromRGB(70, 70, 70)
G2L["2"]["Size"] = UDim2.new(0, 520, 0, 296)
G2L["2"]["Position"] = UDim2.new(0.12741, 0, 0.29397, 0)
G2L["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- Create a new frame named "sideFrame" with size {0, 100}, {0, 300} inside G2L["2"]
local sideFrame = Instance.new("Frame", G2L["2"])
sideFrame.Name = "sideFrame"  -- Name the inner frame "sideFrame"
sideFrame.Size = UDim2.new(0, 130, 0, 296)  -- Size {0, 100}, {0, 300}
sideFrame.Position = UDim2.new(0, 0, 0, 0)  -- Position it inside the parent frame (G2L["2"])
sideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  -- Set a different background color to distinguish it
sideFrame.BorderSizePixel = 0  -- Remove the border
sideFrame.ZIndex = 2  -- Set a higher ZIndex for sideFrame to appear above the parent
sideFrame.BackgroundTransparency = 0.5

-- Add rounded corners to sideFrame using UICorner
local uiCorner = Instance.new("UICorner", sideFrame)
uiCorner.CornerRadius = UDim.new(0, 5)  -- Adjust the radius value to make the corners more or less rounded

-- Create MiscFrame
local MiscFrame = Instance.new("ScrollingFrame", G2L["2"])
MiscFrame["Active"] = true
MiscFrame["BorderSizePixel"] = 0
MiscFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
MiscFrame["ScrollBarImageTransparency"] = 1
MiscFrame["Size"] = UDim2.new(0, 396, 0, 296)
MiscFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
MiscFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
MiscFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
MiscFrame["BackgroundTransparency"] = 1
MiscFrame.Visible = false  -- Initially hidden
MiscFrame.ZIndex = 3
-- Disable scroll functionality by setting CanvasSize to Size and removing the scrollbar
MiscFrame.CanvasSize = UDim2.new(0, 0, 0, 450)
MiscFrame.ScrollBarThickness = 6

-- Function to create buttons
local function createButton(parent, position, text, callback)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(0, 379, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.GothamBold
    button.TextSize = 18
    button.BorderSizePixel = 0
    local uiCorner = Instance.new("UICorner", button)
    uiCorner.CornerRadius = UDim.new(0, 8)

    -- Button click event
    button.MouseButton1Click:Connect(callback)
    
    return button
end

-- Function to create toggle switches
local function createToggle1(parent, position, text, initialState, callback)
    local toggleFrame = Instance.new("Frame", parent)
    toggleFrame.Size = UDim2.new(0, 379, 0, 40)
    toggleFrame.Position = position
    toggleFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    toggleFrame.BorderSizePixel = 0
    local uiCorner = Instance.new("UICorner", toggleFrame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local toggleLabel = Instance.new("TextLabel", toggleFrame)
    toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.Font = Enum.Font.GothamBold
    toggleLabel.TextSize = 18

    local toggleButton = Instance.new("TextButton", toggleFrame)
    toggleButton.Size = UDim2.new(0.3, 0, 1, 0)
    toggleButton.Position = UDim2.new(0.7, 0, 0, 0)
    toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    toggleButton.Text = initialState and "ON" or "OFF"
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 18
    toggleButton.BorderSizePixel = 0
    local uiCornerToggle = Instance.new("UICorner", toggleButton)
    uiCornerToggle.CornerRadius = UDim.new(0, 8)

    -- Toggle button click event
    toggleButton.MouseButton1Click:Connect(function()
        initialState = not initialState  -- Toggle state
        toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggleButton.Text = initialState and "ON" or "OFF"
        if callback then
            callback(initialState)  -- Trigger the callback with the new state
        end
    end)

    return toggleFrame
end

local LocalPlayer = game.Players.LocalPlayer

-- Helper functions for HOST functionality
local function bringallplayers()
    -- Loop through all players in the game
    for _, player in pairs(game.Players:GetPlayers()) do
        -- Check if the player is not LocalPlayer
        if player ~= LocalPlayer then
            -- Fire the server event to summon the player
            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
        end
    end
end

local function babyAlts()
    -- Loop through all players in the game
    for _, player in pairs(game.Players:GetPlayers()) do
        -- Check if the player is not LocalPlayer
        if player ~= LocalPlayer then
            task.wait(1.5)
            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "BabySize", player)
        end
    end
end

-- Create Misc buttons (this will be the main content visible)
createButton(MiscFrame, UDim2.new(0, 0, 0, 10), "Bring all buyers [ðŸ‘‘]", function()
    bringallplayers()
end)

createButton(MiscFrame, UDim2.new(0, 0, 0, 60), "Baby alts [ðŸ‘‘]", function()
    babyAlts()
end)

local cashAuraActive = false
createToggle1(MiscFrame, UDim2.new(0, 0, 0, 110), "Cash Aura", false, function(state)
    -- Define the PLAYER variable to represent the local player
    local PLAYER = game.Players.LocalPlayer
    
    -- If the state is ON, start the loop
    if state then
        cashAuraActive = true -- Start the loop

        -- Run the loop only when Cash Aura is ON
        spawn(function()
            while cashAuraActive do
                -- Check if the "Drop" folder exists before continuing
                local dropFolder = workspace:FindFirstChild("Ignored") and workspace.Ignored:FindFirstChild("Drop")
                if dropFolder then
                    -- Iterate through the drops in the workspace
                    for _, v in ipairs(dropFolder:GetChildren()) do
                        -- Check if the object is a Part and within a 12-stud radius of the player
                        if v:IsA("Part") and PLAYER:DistanceFromCharacter(v.Position) < 12 then
                            -- Check if the part has a ClickDetector before firing it
                            local clickDetector = v:FindFirstChildOfClass("ClickDetector")
                            if clickDetector then
                                -- Fire the ClickDetector on the part (i.e., interact with the drop)
                                fireclickdetector(clickDetector)
                            end
                        end
                    end
                end

                -- Wait for a short time before checking again
                task.wait(0.1)

                -- Check if the state has changed to OFF and stop if necessary
                if not state then
                    cashAuraActive = false
                end
            end
        end)
    else
        cashAuraActive = false -- Ensure the loop stops if state is OFF
    end
end)

local autoDropActive = false
createToggle1(MiscFrame, UDim2.new(0, 0, 0, 160), "Auto Drop", false, function(state)
    -- If the state is ON, start the Auto Drop loop
    if state then
        -- Set the autoDropActive flag to true to start the loop
        autoDropActive = true
        
        -- Start an infinite loop that checks every 15.5 seconds
        spawn(function()
            while autoDropActive do
                -- Fire the DropMoney event with the amount 15000
                game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("DropMoney", 15000)
                
                -- Wait for 15.5 seconds before firing again
                task.wait(15.5)
                
                -- If the state turns OFF, break out of the loop
                if not state then
                    autoDropActive = false
                    break
                end
            end
        end)
    else
        -- If state is OFF, stop the loop by setting autoDropActive to false
        autoDropActive = false
    end
end)

-- Add Hide Cash toggle
local IGNORED = workspace:WaitForChild("Ignored")
local hideCash = false

createToggle1(MiscFrame, UDim2.new(0, 0, 0, 210), "Hide Cash", false, function(state)
    -- Set the hideCash flag based on the state of the toggle
    hideCash = state

    -- Apply the hide/unhide effect based on the hideCash flag
    if hideCash == true then
        for _, v in pairs(IGNORED.Drop:GetChildren()) do
            if v:IsA("Part") then
                -- Hide the Decal if it exists
                if v:FindFirstChild("Decal") then
                    v.Decal:Destroy()  -- Removing Decal(s)
                end

                -- Hide the BillboardGui and make the part transparent
                if v:FindFirstChild("BillboardGui") then
                    v.BillboardGui.Enabled = false
                end
                v.Transparency = 1
                v.CanCollide = false
            end
        end
    else
        -- Unhide the cash drops
        for _, v in pairs(IGNORED.Drop:GetChildren()) do
            if v:IsA("Part") then
                -- Show the BillboardGui and make the part visible
                if v:FindFirstChild("BillboardGui") then
                    v.BillboardGui.Enabled = true
                end
                v.Transparency = 0
                v.CanCollide = true
            end
        end
    end
end)

-- Add more HOST functionality buttons
createButton(MiscFrame, UDim2.new(0, 0, 0, 260), "Recount Floor Cash", function()
    countFloorCash2()  -- Force recount
end)

createButton(MiscFrame, UDim2.new(0, 0, 0, 310), "Destroy Floor Cash", function()
    for _, v in pairs(workspace.Ignored.Drop:GetChildren()) do
        if v:IsA("Part") then
            v:Destroy()
        end
    end
end)

createButton(MiscFrame, UDim2.new(0, 0, 0, 360), "Kick all players", function()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= LocalPlayer then
            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Kick", player)
        end
    end
end)

-- Settings Frame
local SettingsFrame = Instance.new("ScrollingFrame", G2L["2"])
SettingsFrame["Active"] = true
SettingsFrame["BorderSizePixel"] = 0
SettingsFrame["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
SettingsFrame["ScrollBarImageTransparency"] = 1
SettingsFrame["Size"] = UDim2.new(0, 396, 0, 296)
SettingsFrame["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
SettingsFrame["Position"] = UDim2.new(0.24, 10, 0, 0)
SettingsFrame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
SettingsFrame["BackgroundTransparency"] = 1
SettingsFrame.Visible = false
SettingsFrame.ZIndex = 3
SettingsFrame.CanvasSize = UDim2.new(0, 0, 0, 500)
SettingsFrame.ScrollBarThickness = 6

-- GUI Settings
local GuiSettings = {
    ["Teleport_Location"] = "Bank",
    ["Teleport_Location_Keybind"] = "c",
    ["Auto_Bring_to_Vault"] = false,
    ["Auto_Kick_on_Finished"] = false, 
    ["Auto_Kick_on_Extra_Pickup"] = false,
    ["Bring_on_Join"] = false,
    ["Join_Audio_id"] = "2927319759",
    ["Goal_Audio_id"] = "7116606826",
    ["Leave_Audio_id"] = "5606947971",
    ["Gui_Image_Background_id"] = "5430597512",
    ["Roblox_Cookie"] = false,
    ["Use_Cookie_block_method"] = false,
    ["Discord_Webhook"] = false,
    ["Send_Webhook_on_complete_order"] = false,
    ["Gui_Open_and_Close"] = "v",
}

local function teleportToLocation(location)
    local locations = {
        Bank = Vector3.new(-384, 23, -286),
        Bankroof = Vector3.new(-384, 40, -286),
        Basketball = Vector3.new(-930, 22, -481),
        Club = Vector3.new(-287, 49, -800),
        Swamp = Vector3.new(921, 50, -838),
        Train = Vector3.new(-1142, 18, -225),
        Vault = Vector3.new(-503, 40, -790)
    }
    
    local targetPosition = locations[location]
    if targetPosition and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
    end
end

-- Function to create dropdowns
local function createDropdown(TEXTBOX, parent, position, text, options, callback)
    local dropdownFrame = Instance.new("Frame", parent)
    dropdownFrame.Size = UDim2.new(0, 379, 0, 40)
    dropdownFrame.Position = position
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    dropdownFrame.BorderSizePixel = 0
    local uiCorner = Instance.new("UICorner", dropdownFrame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local label = Instance.new("TextLabel", dropdownFrame)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 13

    local dropdownButton = Instance.new("TextButton", dropdownFrame)
    dropdownButton.Size = UDim2.new(0, 100, 0, 40)
    dropdownButton.Position = UDim2.new(0.7, 0, 0, 0)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.Text = TEXTBOX
    dropdownButton.Font = Enum.Font.GothamBold
    dropdownButton.TextSize = 16
    dropdownButton.BorderSizePixel = 0
    local uiCornerDropdown = Instance.new("UICorner", dropdownButton)
    uiCornerDropdown.CornerRadius = UDim.new(0, 8)
    
    dropdownButton.MouseButton1Click:Connect(function()
        local selection = Instance.new("Frame")
        selection.Size = UDim2.new(0, 100, 0, 160)
        selection.Position = UDim2.new(0, 0, 0, dropdownFrame.Position.Y.Offset + 40)
        selection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        selection.Parent = parent
        selection.ZIndex = 2

        local corner = Instance.new("UICorner", selection)
        corner.CornerRadius = UDim.new(0, 10)

        local scrollFrame = Instance.new("ScrollingFrame", selection)
        scrollFrame.Size = UDim2.new(0, 100, 0, 160)
        scrollFrame.Position = UDim2.new(0, 0, 0, 0)
        scrollFrame.BackgroundTransparency = 1
        scrollFrame.ScrollBarThickness = 6
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #options * 40)
        scrollFrame.ScrollBarImageTransparency = 0.7
        scrollFrame.ZIndex = 3

        for i, option in ipairs(options) do
            local optionButton = Instance.new("TextButton", scrollFrame)
            optionButton.Size = UDim2.new(0, 95, 0, 40)
            optionButton.Position = UDim2.new(0, 0, 0, (i - 1) * 40)
            optionButton.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
            optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            optionButton.Text = option
            optionButton.Font = Enum.Font.GothamBold
            optionButton.TextSize = 10
            optionButton.BorderSizePixel = 0

            local optionCorner = Instance.new("UICorner", optionButton)
            optionCorner.CornerRadius = UDim.new(0, 8)

            optionButton.MouseButton1Click:Connect(function()
                dropdownButton.Text = option
                selection:Destroy()
                if callback then
                    callback(option)
                end
            end)
        end
    end)

    return dropdownFrame
end

-- Function to create text inputs
local function createTextInput(TEXTBOX, parent, position, text, placeholder, callback)
    local textInputFrame = Instance.new("Frame", parent)
    textInputFrame.Size = UDim2.new(0, 379, 0, 40)
    textInputFrame.Position = position
    textInputFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    textInputFrame.BorderSizePixel = 0

    local uiCorner = Instance.new("UICorner", textInputFrame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local label = Instance.new("TextLabel", textInputFrame)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 13

    local inputBox = Instance.new("TextBox", textInputFrame)
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.BorderSizePixel = 0
    inputBox.TextSize = 14
    inputBox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
    inputBox.FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    inputBox.Size = UDim2.new(0, 104, 0, 23)
    inputBox.Position = UDim2.new(0.7, 0, 0.2, 0)
    inputBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    inputBox.Text = TEXTBOX
    inputBox.ClearTextOnFocus = false
    inputBox.TextWrapped = true

    local inputBoxCorner = Instance.new("UICorner", inputBox)
    inputBoxCorner.CornerRadius = UDim.new(0, 5)

    local inputBoxStroke = Instance.new("UIStroke", inputBox)
    inputBoxStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    inputBoxStroke.Color = Color3.fromRGB(50, 50, 50)

    inputBox.FocusLost:Connect(function()
        if callback then
            callback(inputBox.Text)
        end
    end)

    return textInputFrame
end

-- Settings section content
createDropdown(GuiSettings["Teleport_Location"], SettingsFrame, UDim2.new(0, 0, 0, 10), "Teleport Location", {
    "Bank", "Bankroof", "Basketball", "Club", "Swamp", "Train", "Vault"
}, function(location)
    GuiSettings["Teleport_Location"] = location
end)

createTextInput(GuiSettings["Teleport_Location_Keybind"], SettingsFrame, UDim2.new(0, 0, 0, 60), "Teleport Location Keybind", "Press a key", function(input)
    GuiSettings["Teleport_Location_Keybind"] = input
end)

createTextInput(GuiSettings["Gui_Open_and_Close"], SettingsFrame, UDim2.new(0, 0, 0, 110), "Gui Open and Close", "Press a key", function(input)
    GuiSettings["Gui_Open_and_Close"] = input
end)

-- Additional HOST Settings
local function createToggle2(parent, position, text, initialState, callback)
    local toggleFrame = Instance.new("Frame", parent)
    toggleFrame.Size = UDim2.new(0, 379, 0, 40)
    toggleFrame.Position = position
    toggleFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    toggleFrame.BorderSizePixel = 0
    local uiCorner = Instance.new("UICorner", toggleFrame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local toggleLabel = Instance.new("TextLabel", toggleFrame)
    toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.Font = Enum.Font.GothamBold
    toggleLabel.TextSize = 18

    local toggleButton = Instance.new("TextButton", toggleFrame)
    toggleButton.Size = UDim2.new(0.3, 0, 1, 0)
    toggleButton.Position = UDim2.new(0.7, 0, 0, 0)
    toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    toggleButton.Text = initialState and "ON" or "OFF"
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.TextSize = 18
    toggleButton.BorderSizePixel = 0
    local uiCornerToggle = Instance.new("UICorner", toggleButton)
    uiCornerToggle.CornerRadius = UDim.new(0, 8)

    toggleButton.MouseButton1Click:Connect(function()
        initialState = not initialState
        toggleButton.BackgroundColor3 = initialState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        toggleButton.Text = initialState and "ON" or "OFF"
        GuiSettings[text:gsub(" ", "_"):gsub("%[ðŸ‘‘%]", "")] = initialState
        if callback then
            callback(initialState)
        end
    end)

    return toggleFrame
end

createToggle2(SettingsFrame, UDim2.new(0, 0, 0, 160), "Auto Kick on Finished [ðŸ‘‘]", GuiSettings["Auto_Kick_on_Finished"], function(state)
    GuiSettings["Auto_Kick_on_Finished"] = state
end)

createToggle2(SettingsFrame, UDim2.new(0, 0, 0, 210), "Auto Kick on Extra Pickup [ðŸ‘‘]", GuiSettings["Auto_Kick_on_Extra_Pickup"], function(state)
    GuiSettings["Auto_Kick_on_Extra_Pickup"] = state
end)

createToggle2(SettingsFrame, UDim2.new(0, 0, 0, 260), "Bring on Join [ðŸ‘‘]", GuiSettings["Bring_on_Join"], function(state)
    GuiSettings["Bring_on_Join"] = state
end)

createTextInput(GuiSettings["Join_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 310), "Join Audio id", "Enter audio ID", function(input)
    GuiSettings["Join_Audio_id"] = input
end)

createTextInput(GuiSettings["Goal_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 360), "Goal Audio id", "Enter audio ID", function(input)
    GuiSettings["Goal_Audio_id"] = input
end)

createTextInput(GuiSettings["Leave_Audio_id"], SettingsFrame, UDim2.new(0, 0, 0, 410), "Leave Audio id", "Enter audio ID", function(input)
    GuiSettings["Leave_Audio_id"] = input
end)

-- Create navigation buttons
local function createNavButton(parent, position, text, targetFrame)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(1, -20, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.GothamBold
    button.TextSize = 18
    button.BorderSizePixel = 0

    -- Add rounded corners to each button
    local buttonUICorner = Instance.new("UICorner", button)
    buttonUICorner.CornerRadius = UDim.new(0, 8)

    -- Add functionality for button click
    button.MouseButton1Click:Connect(function()
        print("Button clicked:", text)  -- Debug print
        -- Hide all frames first
        G2L["7"].Visible = false
        MiscFrame.Visible = false
        SettingsFrame.Visible = false

        -- Show the corresponding frame for the button clicked
        if targetFrame then
            targetFrame.Visible = true
            print("Showing frame for:", text)  -- Debug print
            print("Frame visibility set to:", targetFrame.Visible)
            print("Frame size:", targetFrame.Size)
            print("Frame position:", targetFrame.Position)
        end
    end)

    return button
end

-- Create navigation buttons
local playersButton = createNavButton(sideFrame, UDim2.new(0, 10, 0, 20), "Players", G2L["7"])
local hostButton = createNavButton(sideFrame, UDim2.new(0, 10, 0, 70), "Host", MiscFrame)
local settingsButton = createNavButton(sideFrame, UDim2.new(0, 10, 0, 120), "Settings", SettingsFrame)

print("Navigation buttons created!")
print("Players button exists:", playersButton ~= nil)
print("Host button exists:", hostButton ~= nil)
print("Settings button exists:", settingsButton ~= nil)
print("Players frame exists:", G2L["7"] ~= nil)
print("MiscFrame exists:", MiscFrame ~= nil)
print("SettingsFrame exists:", SettingsFrame ~= nil)

-- StarterGui.ScreenGui.Frame.UICorner
G2L["3"] = Instance.new("UICorner", G2L["2"])

-- StarterGui.ScreenGui.Frame.ScrollingFrame
-- player cards FRAME
G2L["7"] = Instance.new("ScrollingFrame", G2L["2"])
G2L["7"]["Active"] = true
G2L["7"]["BorderSizePixel"] = 0
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
G2L["7"]["ScrollBarImageTransparency"] = 1
G2L["7"]["Size"] = UDim2.new(0, 410, 0, 296)
G2L["7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0)
G2L["7"]["Position"] = UDim2.new(0.24, 0, 0, 0)
G2L["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
G2L["7"]["BackgroundTransparency"] = 0.95  -- Make slightly visible for debugging
G2L["7"]["BackgroundColor3"] = Color3.fromRGB(100, 100, 100)  -- Light gray background
G2L["7"].Visible = false  -- Initially hidden

print("Players frame (G2L[7]) created with size:", G2L["7"].Size)
print("Players frame position:", G2L["7"].Position)

-- StarterGui.ScreenGui.Frame.ScrollingFrame.UIListLayout
G2L["8"] = Instance.new("UIListLayout", G2L["7"])
G2L["8"]["SortOrder"] = Enum.SortOrder.LayoutOrder
G2L["8"].Padding = UDim.new(0, 5)

G2L["8"]:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    -- Add extra space for padding and any offsets that might be required
    G2L["7"].CanvasSize = UDim2.new(0, 0, 0, G2L["8"].AbsoluteContentSize.Y + 10)
end)

-- Function to play sound
local function playSound(soundId)
    local sound = Instance.new("Sound", game.Workspace)
    sound.SoundId = "rbxassetid://" .. soundId
    sound:Play()
end

local playerData = {}

-- Initialize data for a player
function initializePlayerData(player)
    if not playerData[player.Name] then
        playerData[player.Name] = {
            credit = tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value),
            need = 0,
            missing = 0,
            shouldhave = 0,
            last_cash_amount = 0,
            CASH_SPENT = 0,
            notificationPlayed = false,
            istracking = false,
            starter = 0,
            need2 = 0
        }
    end
end

-- Access player data
function getPlayerData(player)
    return playerData[player.Name] or {}
end

-- Mobile toggle button for touch devices
if UserInputService.TouchEnabled then
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ToggleGui"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the ToggleButton (Button to trigger the functions)
    local button = Instance.new("TextButton")
    button.Name = "ToggleButton"
    button.Parent = screenGui
    button.Position = UDim2.new(0, 10, 0.5, -25)  -- Position on the left side, centered vertically
    button.Size = UDim2.new(0, 200, 0, 50)  -- Size of the button
    button.Text = "Hide"  -- Text on the button
    button.BackgroundColor3 = Color3.fromRGB(28, 28, 28)  -- Blue background
    button.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
    local uiCorner22 = Instance.new("UICorner", button)
    uiCorner22.CornerRadius = UDim.new(0, 8)
    button["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    button.TextSize = 24

    button.MouseButton1Click:Connect(function()
        if button.Text == "Hide" then
            hideGUIs()  -- Call showGUIs when button is clicked
            button.Text = "Open"  -- Change the button text to "Hide GUI"
        else
            showGUIs()  -- Call hideGUIs when button is clicked
            button.Text = "Hide"  -- Change the button text to "Toggle GUI"
        end
    end)
end

-- Create the TextLabel for cash display inside G2L["1"]
local cashDisplay = Instance.new("TextLabel")
cashDisplay.Size = UDim2.new(0, 300, 0, 50)
cashDisplay.Position = UDim2.new(0, 10, 0, 10)
cashDisplay.TextSize = 24
cashDisplay.BackgroundTransparency = 0.5
cashDisplay.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
cashDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
cashDisplay.Text = "Total Floor Cash: $0"
cashDisplay.Parent = G2L["1"]  -- Set the parent to G2L["1"]
cashDisplay["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)

-- Create a UICorner to round the corners of the TextLabel
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)  -- Adjust the radius to your preference
uiCorner.Parent = cashDisplay

-- Function to convert cash text to integer
local function cashToInt(cashText)
    -- Remove all non-numeric characters except for the decimal point
    local numericString = cashText:gsub("[^0-9]", "")
    
    -- Convert the cleaned string to a number
    local cashAmount = tonumber(numericString)
    
    -- If the conversion fails (e.g., empty string or invalid characters), return 0
    return cashAmount or 0
end

-- Function to count floor cash
local function countFloorCash2()
    local totalFloorCashAmount = 0

    -- Loop through all parts in the "Ignored.Drop" folder in workspace
    for _, v in pairs(workspace.Ignored.Drop:GetChildren()) do
        if v:IsA("Part") and v:FindFirstChild("BillboardGui") then
            local billboardGui = v.BillboardGui
            local textLabel = billboardGui:FindFirstChild("TextLabel")
            
            -- If the TextLabel exists and has valid text, process it
            if textLabel and textLabel.Text then
                local amount = cashToInt(textLabel.Text)
                totalFloorCashAmount += amount
            end
        end
    end

    local casher = format(totalFloorCashAmount)
    cashDisplay.Text = casher
    return totalFloorCashAmount
end

-- Use Heartbeat to periodically update the total cash
game:GetService("RunService").Heartbeat:Connect(function()
    countFloorCash2()  -- Call the function to update the cash display
end)

-- Function to parse amount input
local function parseAmount(input)
    -- Trim spaces and check for suffixes (k, m, b)
    input = input:match("^%s*(.-)%s*$")  -- Trim spaces
    local num, suffix = input:match("^(%d+%.?%d*)([kmb]?)$")  -- Capture number with optional decimal and suffix
    num = tonumber(num)  -- Convert the number part to a number
    
    if num then
        -- Handle suffixes
        if suffix == "k" then
            return num * 1000
        elseif suffix == "m" then
            return num * 1000000
        elseif suffix == "b" then
            return num * 1000000000
        else
            return num  -- No suffix, return the number as it is
        end
    else
        return 0  -- If the input isn't valid, return 0
    end
end

-- Function to create player box (simplified for HOST)
local function createbox(player, THREE, LABEL1)
    print("Creating player box for:", player.Name)
    
    local frame = Instance.new("Frame", G2L["7"])
    frame["BorderSizePixel"] = 0
    frame["BackgroundColor3"] = Color3.fromRGB(28, 28, 28)
    frame["Size"] = UDim2.new(0, 379, 0, 76)
    frame["Position"] = UDim2.new(-0.02488, 0, -0.01718, 0)
    frame["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    frame.Name = player.Name .. "_Box"  -- Naming the box with player name
    
    print("Player box frame created for:", player.Name, "- Frame exists:", frame ~= nil)
    
    -- StarterGui.ScreenGui.Frame.ScrollingFrame.Frame.UICorner
    local uicorner1 = Instance.new("UICorner", frame)
    
    local PLACEHOLDER_IMAGE = "rbxassetid://0"
    
    local image1 = Instance.new("ImageLabel")
    image1.Parent = frame
    image1["BorderSizePixel"] = 0
    image1["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
    image1["Image"] = "rbxasset://textures/ui/GuiImagePlaceholder.png"
    image1["Size"] = UDim2.new(0, 40, 0, 40)
    image1["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    image1["Position"] = UDim2.new(0.01583, 0, 0.05117, 0)
    
    local userId = player.UserId
    local thumbType = Enum.ThumbnailType.HeadShot
    local thumbSize = Enum.ThumbnailSize.Size420x420
    local content, isReady = game:GetService("Players"):GetUserThumbnailAsync(userId, thumbType, thumbSize)
    
    image1.Image = (isReady and content) or PLACEHOLDER_IMAGE
    
    local uicorner2 = Instance.new("UICorner", image1)
    uicorner2["CornerRadius"] = UDim.new(1, 0)
    
    -- StarterGui.ScreenGui.Frame.ScrollingFrame.Frame.ImageLabel.UIStroke
    local stroke2 = Instance.new("UIStroke", image1)
    stroke2["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
    stroke2["Color"] = Color3.fromRGB(49, 49, 49)
    
    -- Should have label
    local textlabel1 = Instance.new("TextLabel", frame)
    textlabel1["BorderSizePixel"] = 0
    textlabel1["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    textlabel1["TextSize"] = 14
    textlabel1["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    textlabel1["TextColor3"] = Color3.fromRGB(255, 255, 255)
    textlabel1["BackgroundTransparency"] = 1
    textlabel1["Size"] = UDim2.new(0, 200, 0, 26)
    textlabel1["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    textlabel1["Text"] = LABEL1 or ""
    textlabel1["Name"] = "ShouldHave"
    textlabel1["Position"] = UDim2.new(0.67018, 0, -0.00049, 0)
    
    -- username
    local label2 = Instance.new("TextLabel", frame)
    label2["BorderSizePixel"] = 0
    label2["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    label2["TextSize"] = 14
    label2["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    label2["TextColor3"] = Color3.fromRGB(255, 255, 255)
    label2["BackgroundTransparency"] = 1
    label2["Size"] = UDim2.new(0, 145, 0, 26)
    label2["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    label2["Text"] = player.Name 
    label2["Name"] = "NAYM"
    label2["Position"] = UDim2.new(0.15, 0, -0.00049, 0)
    
    -- Missing label
    local label3 = Instance.new("TextLabel", frame)
    label3["BorderSizePixel"] = 0
    label3["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    label3["TextSize"] = 14
    label3["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    label3["TextColor3"] = Color3.fromRGB(64, 64, 64)
    label3["BackgroundTransparency"] = 1
    label3["Size"] = UDim2.new(0, 200, 0, 26)
    label3["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    label3["Text"] = THREE or ""
    label3["Name"] = "Missing"
    label3["Position"] = UDim2.new(0.67018, 0, 0.21991, 0)
    
    -- Cash label
    local label4 = Instance.new("TextLabel", frame)
    label4["BorderSizePixel"] = 0
    label4["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
    label4["TextSize"] = 14
    label4["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    label4["TextColor3"] = Color3.fromRGB(0, 131, 0)
    label4["BackgroundTransparency"] = 1
    label4["Size"] = UDim2.new(0, 200, 0, 26)
    label4["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    label4["Text"] = format(tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value))
    label4["Name"] = "Credit"
    label4["Position"] = UDim2.new(0.15, 0, 0.238, 0)
    
    -- Input textbox
    local textbox = Instance.new("TextBox", frame)
    textbox["TextColor3"] = Color3.fromRGB(255, 255, 255)
    textbox["BorderSizePixel"] = 0
    textbox["TextSize"] = 14
    textbox["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
    textbox["FontFace"] = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
    textbox["Size"] = UDim2.new(0, 104, 0, 23)
    textbox["Position"] = UDim2.new(0.67018, 0, 0.61136, 0)
    textbox["BorderColor3"] = Color3.fromRGB(0, 0, 0)
    textbox["Text"] = ""
    
    local corner4 = Instance.new("UICorner", textbox)
    corner4["CornerRadius"] = UDim.new(0, 5)
    
    local uistroke4 = Instance.new("UIStroke", textbox)
    uistroke4["ApplyStrokeMode"] = Enum.ApplyStrokeMode.Border
    uistroke4["Color"] = Color3.fromRGB(50, 50, 50)

    -- Action buttons
    local buttonsFrame = Instance.new("Frame", frame)
    buttonsFrame["Size"] = UDim2.new(0, 160, 0, 40)
    buttonsFrame["Position"] = UDim2.new(0.01583, 0, 0.59991, 0)
    buttonsFrame["BackgroundTransparency"] = 1

    -- Kick button
    local button1 = Instance.new("ImageButton", buttonsFrame)
    button1["Size"] = UDim2.new(0, 30, 0, 30)
    button1["Position"] = UDim2.new(0, 0, 0, 0)
    button1["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
    button1["Image"] = "http://www.roblox.com/asset/?id=6710784639"
    button1["ImageTransparency"] = 0.2
    local button1Corner = Instance.new("UICorner", button1)
    button1Corner["CornerRadius"] = UDim.new(0, 8)

    -- Teleport button
    local button2 = Instance.new("ImageButton", buttonsFrame)
    button2["Size"] = UDim2.new(0, 30, 0, 30)
    button2["Position"] = UDim2.new(0.25, 0, 0, 0)
    button2["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
    button2["Image"] = "http://www.roblox.com/asset/?id=12941020168"
    button2["ImageTransparency"] = 0.2
    local button2Corner = Instance.new("UICorner", button2)
    button2Corner["CornerRadius"] = UDim.new(0, 8)

    -- Bring button
    local button3 = Instance.new("ImageButton", buttonsFrame)
    button3["Size"] = UDim2.new(0, 30, 0, 30)
    button3["Position"] = UDim2.new(0.5, 0, 0, 0)
    button3["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
    button3["Image"] = "http://www.roblox.com/asset/?id=131012702"
    button3["ImageTransparency"] = 0.2
    local button3Corner = Instance.new("UICorner", button3)
    button3Corner["CornerRadius"] = UDim.new(0, 8)

    -- Set text alignment
    textlabel1.TextXAlignment = Enum.TextXAlignment.Left
    label2.TextXAlignment = Enum.TextXAlignment.Left
    label3.TextXAlignment = Enum.TextXAlignment.Left
    label4.TextXAlignment = Enum.TextXAlignment.Left

    -- Add padding
    local padding = Instance.new("UIPadding", G2L["7"])
    padding["PaddingTop"] = UDim.new(0, 5)
    padding["PaddingLeft"] = UDim.new(0, 10)

    -- Button functionality
    button1.MouseButton1Click:Connect(function()
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Kick", player)
    end)
    
    button2.MouseButton1Click:Connect(function()
        local localPlayer = game.Players.LocalPlayer
        local targetPlayer = game.Players:FindFirstChild(player.Name)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetHRP = targetPlayer.Character.HumanoidRootPart
            localPlayer.Character:MoveTo(targetHRP.Position)
        end
    end)
    
    button3.MouseButton1Click:Connect(function()
        game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
    end)

    -- Handle textbox input
    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local inputValue = parseAmount(textbox.Text)
            if inputValue > 0 then
                initializePlayerData(player)
                local data = getPlayerData(player)
                data.need = inputValue
                data.shouldhave = data.credit + inputValue
                data.missing = data.shouldhave - tonumber(player:WaitForChild("DataFolder"):WaitForChild("Currency").Value)
                
                textlabel1.Text = "Should have: " .. format(data.shouldhave)
                label3.Text = "Missing: " .. format(data.missing)
                
                textbox.Text = ""
            end
        end
    end)

    -- Update cash in real time
    player:WaitForChild("DataFolder"):WaitForChild("Currency").Changed:Connect(function(newValue)
        label4.Text = format(newValue)
        if playerData[player.Name] and playerData[player.Name].need > 0 then
            local data = getPlayerData(player)
            data.missing = data.shouldhave - newValue
            label3.Text = "Missing: " .. format(data.missing)
        end
    end)
    
    print("Player box completed for:", player.Name)
    return frame
end

-- Function to delete player box
local function deletebox(player)
    local box = G2L["7"]:FindFirstChild(player.Name .. "_Box")
    if box then
        box:Destroy()
    end
end

-- Initialize for existing players
for _, player in pairs(game.Players:GetPlayers()) do
    if player ~= game.Players.LocalPlayer then
        print("Creating box for existing player:", player.Name)
        initializePlayerData(player)
        createbox(player, "", "")
    end
end

print("Finished creating boxes for existing players")

-- Add a test frame to make sure Players tab shows something
local testFrame = Instance.new("Frame", G2L["7"])
testFrame.Size = UDim2.new(0, 379, 0, 50)
testFrame.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
testFrame.Name = "TestFrame"

local testLabel = Instance.new("TextLabel", testFrame)
testLabel.Size = UDim2.new(1, 0, 1, 0)
testLabel.BackgroundTransparency = 1
testLabel.Text = "Players Tab is Working! Players will appear here."
testLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
testLabel.Font = Enum.Font.GothamBold
testLabel.TextSize = 16

print("Test frame added to Players tab")
print("G2L[7] children count:", #G2L["7"]:GetChildren())

-- Connect events for new players
game.Players.PlayerAdded:Connect(function(player)
    if player ~= game.Players.LocalPlayer then
        wait(1)
        initializePlayerData(player)
        createbox(player, "", "")
        
        -- Play join sound
        local Join_Audio = tonumber(GuiSettings["Join_Audio_id"])
        if Join_Audio then
            playSound(Join_Audio)
        end
        
        -- Auto bring on join
        if GuiSettings["Bring_on_Join"] == true then
            task.wait(0.5)
            game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Summon", player)
        end
    end
end)

-- Connect events for leaving players
game.Players.PlayerRemoving:Connect(function(player)
    if player ~= game.Players.LocalPlayer then
        deletebox(player)
        if playerData[player.Name] then
            playerData[player.Name] = nil
        end
        
        -- Play leave sound
        local Leave_Audio = tonumber(GuiSettings["Leave_Audio_id"])
        if Leave_Audio then
            playSound(Leave_Audio)
        end
    end
end)

-- Keybind functionality
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then
        return
    end

    -- Only proceed if GUI exists
    if not G2L["1"] then return end

    local guiKeybind = GuiSettings["Gui_Open_and_Close"]:sub(1, 1):upper()
    local guiKeyEnum = Enum.KeyCode[guiKeybind]
    
    if input.KeyCode == guiKeyEnum then
        if G2L["1"].Enabled then
            hideGUIs()
        else
            showGUIs()
        end
    end

    local teleportKeybind = GuiSettings["Teleport_Location_Keybind"]:sub(1, 1):upper()
    local teleportKeyEnum = Enum.KeyCode[teleportKeybind]
    
    if input.KeyCode == teleportKeyEnum then
        teleportToLocation(GuiSettings["Teleport_Location"])
    end
end)

-- Set initial visibility
G2L["7"].Visible = true  -- Show Players section by default
G2L["1"].Enabled = true

print("Initial setup complete!")
print("Players frame visible:", G2L["7"].Visible)
print("Number of existing players:", #game.Players:GetPlayers() - 1)  -- Exclude LocalPlayer

-- Update player cash values in real time
spawn(function()
    while wait(1) do
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                local box = G2L["7"]:FindFirstChild(player.Name .. "_Box")
                if box then
                    local cashLabel = box:FindFirstChild("Credit")
                    if cashLabel and player:FindFirstChild("DataFolder") and player.DataFolder:FindFirstChild("Currency") then
                        local currentCash = player.DataFolder.Currency.Value
                        cashLabel.Text = format(currentCash)
                        
                        -- Update missing amount if player has target
                        if playerData[player.Name] and playerData[player.Name].need > 0 then
                            local data = getPlayerData(player)
                            data.missing = data.shouldhave - currentCash
                            local missingLabel = box:FindFirstChild("Missing")
                            if missingLabel then
                                missingLabel.Text = "Missing: " .. format(data.missing)
                            end
                            
                            -- Play goal sound when target reached
                            if data.missing <= 0 and not data.notificationPlayed then
                                local Goal_Audio = tonumber(GuiSettings["Goal_Audio_id"])
                                if Goal_Audio then
                                    playSound(Goal_Audio)
                                end
                                data.notificationPlayed = true
                                
                                -- Auto kick on finished
                                if GuiSettings["Auto_Kick_on_Finished"] == true then
                                    task.wait(1)
                                    game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer("VIP_CMD", "Kick", player)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end)

print("HOST GUI Loaded Successfully!")
print("Press V to toggle GUI, C to teleport!")
